{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stude\\\\workspace\\\\team-6-mate\\\\final\\\\react\\\\src\\\\pages\\\\Movies\\\\MovieGrid.js\",\n  _s = $RefreshSig$();\nimport Layout from \"../../components/ui/Layout\";\nimport React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { Button } from 'react-bootstrap';\nimport Form from \"react-bootstrap/Form\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { getMovieList } from \"../../api/MovieApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieGrid = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [numberOfResults, setNumberOfRecords] = useState(0);\n  const doSetSearchValue = event => {\n    setSearchValue(event.target.value);\n  };\n  const handleSearch = event => {\n    if (event !== undefined) event.preventDefault();\n    const search = async () => {\n      const searchCriteria = {\n        title: searchValue\n      };\n      getMovieList(searchCriteria).then(data => {\n        console.log(\"Found:\" + data.length + \" records\");\n        setMovies(data);\n        setNumberOfRecords(data.length);\n      }).catch(error => {\n        alert(\"did it work??\");\n        throw new Error(\"Could not get movies from server\");\n      });\n    };\n    search();\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"search\",\n        placeholder: \"Search\",\n        className: \"me-2\",\n        \"aria-label\": \"Search\",\n        value: searchValue,\n        onChange: doSetSearchValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-success\",\n        onClick: handleSearch,\n        children: \"Search Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [numberOfResults === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No movies found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), movies.map(movie => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"my-2\",\n          style: {\n            width: '18rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: movie.posterPath,\n            alt: movie.title,\n            width: \"10%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted moveSubtitle\",\n              tag: \"h6\",\n              children: movie.tagline\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: movie.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n              children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n                to: {\n                  pathname: `/movieDetail/${movie.id}`\n                },\n                children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                  children: \"Show Detail\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieGrid, \"gqpO62JVXHVpsuvmc1ul9689Dnc=\");\n_c = MovieGrid;\nexport default MovieGrid;\nvar _c;\n$RefreshReg$(_c, \"MovieGrid\");","map":{"version":3,"names":["Layout","React","useState","Card","Col","Row","Button","Form","Nav","LinkContainer","getMovieList","jsxDEV","_jsxDEV","MovieGrid","_ref","_s","children","movies","setMovies","searchValue","setSearchValue","numberOfResults","setNumberOfRecords","doSetSearchValue","event","target","value","handleSearch","undefined","preventDefault","search","searchCriteria","title","then","data","console","log","length","catch","error","alert","Error","onSubmit","Control","type","placeholder","className","onChange","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","map","movie","style","width","Img","src","posterPath","alt","Body","Title","Subtitle","tag","tagline","Text","overview","Link","to","pathname","id","_c","$RefreshReg$"],"sources":["C:/Users/stude/workspace/team-6-mate/final/react/src/pages/Movies/MovieGrid.js"],"sourcesContent":["import Layout from \"../../components/ui/Layout\";\r\nimport React, { useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Button } from 'react-bootstrap';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { getMovieList } from \"../../api/MovieApi\";\r\n\r\nconst MovieGrid = ({children}) => {\r\n\r\n  const [movies, setMovies] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [numberOfResults, setNumberOfRecords] = useState(0);\r\n  const doSetSearchValue = (event) => {\r\n    setSearchValue(event.target.value);\r\n  };\r\n  const handleSearch = (event) => {\r\n    if (event !== undefined) event.preventDefault();\r\n    const search = async () => {\r\n      const searchCriteria = {title: searchValue};\r\n      getMovieList(searchCriteria).then(data => {\r\n        console.log(\"Found:\" + data.length + \" records\");\r\n        setMovies(data);\r\n        setNumberOfRecords(data.length);\r\n      }).catch(error=>{        \r\n        alert(\"did it work??\");\r\n        throw new Error(\"Could not get movies from server\");\r\n        \r\n      });\r\n    }\r\n    search();\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Form onSubmit={handleSearch}>\r\n        <Form.Control\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n          className=\"me-2\"\r\n          aria-label=\"Search\"\r\n          value={searchValue}\r\n          onChange={doSetSearchValue}\r\n        />\r\n        <Button variant=\"outline-success\" onClick={handleSearch}>Search Movies</Button>\r\n        </Form>\r\n        <Row>\r\n          {(numberOfResults === 0) &&\r\n            <div>No movies found</div>\r\n          }\r\n          {movies.map(movie => (\r\n            <Col key={movie.id}>\r\n              <Card className=\"my-2\"\r\n                style={{\r\n                  width: '18rem'\r\n                }}>\r\n                <Card.Img variant=\"top\" src={movie.posterPath} alt={movie.title} width=\"10%\" />\r\n                <Card.Body>\r\n                  <Card.Title>{movie.title}</Card.Title>\r\n                  <Card.Subtitle className=\"mb-2 text-muted moveSubtitle\"\r\n                    tag=\"h6\">{movie.tagline}</Card.Subtitle>\r\n                  <Card.Text>\r\n                    {movie.overview}\r\n                  </Card.Text>\r\n                  <Card.Link>\r\n                    <LinkContainer to={{ pathname: `/movieDetail/${movie.id}` }} >\r\n                      <Nav.Link>Show Detail</Nav.Link>\r\n                    </LinkContainer></Card.Link>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>      \r\n      {children}\r\n    </Layout>\r\n  );\r\n}\r\nexport default MovieGrid;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}