{"ast":null,"code":"//export default function useFetchWrapper() {\nexport { utilFetchWrapper };\nconst baseUrl = 'http://localhost:9000';\n//const baseUrl = process.env.REMOTE_API;\nimport Form from 'react-bootstrap/Form';\nfunction utilFetchWrapper() {\n  return {\n    get: request('GET'),\n    post: request('POST'),\n    put: request('PUT'),\n    delete: request('DELETE')\n  };\n  function request(method) {\n    return (url, body) => {\n      const fullUrl = baseUrl + url;\n      let requestOptions = {\n        method: method,\n        mode: 'cors',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      requestOptions = authHeader(requestOptions);\n      if (body) {\n        requestOptions.headers['Content-Type'] = 'application/json';\n        requestOptions.body = JSON.stringify(body);\n      }\n      return fetch(fullUrl, requestOptions).then(handleResponse);\n    };\n  }\n\n  // helper functions\n\n  function authHeader(requestOptions) {\n    // return auth header with jwt if user is logged in and request is to the api url\n    const token = localStorage.getItem('token');\n    if (token) {\n      requestOptions.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return requestOptions;\n  }\n  function handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n      if (!response.ok) {\n        if ([401, 403].includes(response.status)) {\n          // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n          localStorage.removeItem('user');\n          localStorage.removeItem('token');\n          //set context for user to null\n          //send to login page\n          //history.push('/login');\n        }\n\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n      return data;\n    });\n  }\n}","map":{"version":3,"names":["utilFetchWrapper","baseUrl","Form","get","request","post","put","delete","method","url","body","fullUrl","requestOptions","mode","credentials","headers","authHeader","JSON","stringify","fetch","then","handleResponse","token","localStorage","getItem","response","text","data","parse","ok","includes","status","removeItem","error","message","statusText","Promise","reject"],"sources":["C:/Users/stude/workspace/team-6-mate/final/react/src/services/utilFetchWrapper.js"],"sourcesContent":["\r\n//export default function useFetchWrapper() {\r\nexport { utilFetchWrapper };\r\nconst baseUrl = 'http://localhost:9000';\r\n//const baseUrl = process.env.REMOTE_API;\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nfunction utilFetchWrapper () {\r\n\r\n    return {\r\n        get: request('GET'),\r\n        post: request('POST'),\r\n        put: request('PUT'),\r\n        delete: request('DELETE')\r\n    };\r\n    \r\n    function request(method) {                \r\n        return (url, body) => {\r\n            const fullUrl = baseUrl + url;\r\n            let requestOptions = {\r\n                method : method,\r\n                mode: 'cors',\r\n                credentials: 'same-origin',\r\n                headers: {  'Content-Type': 'application/json'}\r\n            };\r\n            requestOptions = authHeader(requestOptions);\r\n            if (body) {\r\n                requestOptions.headers['Content-Type'] = 'application/json';\r\n                requestOptions.body = JSON.stringify(body);\r\n            }\r\n            return fetch(fullUrl, requestOptions)\r\n            .then(handleResponse)\r\n        };\r\n    }\r\n    \r\n    // helper functions\r\n    \r\n    function authHeader(requestOptions) {\r\n        // return auth header with jwt if user is logged in and request is to the api url\r\n        const token = localStorage.getItem('token');\r\n        \r\n        if (token) {\r\n            requestOptions.headers['Authorization'] = `Bearer ${token}`;\r\n        }\r\n        return requestOptions;\r\n    }\r\n    \r\n    function handleResponse(response) {\r\n        return response.text().then(text => {\r\n            const data = text && JSON.parse(text);\r\n            \r\n            if (!response.ok) {\r\n                if ([401, 403].includes(response.status) ) {\r\n                    // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\r\n                    localStorage.removeItem('user');\r\n                    localStorage.removeItem('token');\r\n                    //set context for user to null\r\n                    //send to login page\r\n                    //history.push('/login');\r\n                }\r\n    \r\n                const error = (data && data.message) || response.statusText;\r\n                return Promise.reject(error);\r\n            }\r\n    \r\n            return data;\r\n        });\r\n    }    \r\n}\r\n "],"mappings":"AACA;AACA,SAASA,gBAAgB;AACzB,MAAMC,OAAO,GAAG,uBAAuB;AACvC;AACA,OAAOC,IAAI,MAAM,sBAAsB;AAGvC,SAASF,gBAAgBA,CAAA,EAAI;EAEzB,OAAO;IACHG,GAAG,EAAEC,OAAO,CAAC,KAAK,CAAC;IACnBC,IAAI,EAAED,OAAO,CAAC,MAAM,CAAC;IACrBE,GAAG,EAAEF,OAAO,CAAC,KAAK,CAAC;IACnBG,MAAM,EAAEH,OAAO,CAAC,QAAQ;EAC5B,CAAC;EAED,SAASA,OAAOA,CAACI,MAAM,EAAE;IACrB,OAAO,CAACC,GAAG,EAAEC,IAAI,KAAK;MAClB,MAAMC,OAAO,GAAGV,OAAO,GAAGQ,GAAG;MAC7B,IAAIG,cAAc,GAAG;QACjBJ,MAAM,EAAGA,MAAM;QACfK,IAAI,EAAE,MAAM;QACZC,WAAW,EAAE,aAAa;QAC1BC,OAAO,EAAE;UAAG,cAAc,EAAE;QAAkB;MAClD,CAAC;MACDH,cAAc,GAAGI,UAAU,CAACJ,cAAc,CAAC;MAC3C,IAAIF,IAAI,EAAE;QACNE,cAAc,CAACG,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB;QAC3DH,cAAc,CAACF,IAAI,GAAGO,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC;MAC9C;MACA,OAAOS,KAAK,CAACR,OAAO,EAAEC,cAAc,CAAC,CACpCQ,IAAI,CAACC,cAAc,CAAC;IACzB,CAAC;EACL;;EAEA;;EAEA,SAASL,UAAUA,CAACJ,cAAc,EAAE;IAChC;IACA,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAIF,KAAK,EAAE;MACPV,cAAc,CAACG,OAAO,CAAC,eAAe,CAAC,GAAI,UAASO,KAAM,EAAC;IAC/D;IACA,OAAOV,cAAc;EACzB;EAEA,SAASS,cAAcA,CAACI,QAAQ,EAAE;IAC9B,OAAOA,QAAQ,CAACC,IAAI,EAAE,CAACN,IAAI,CAACM,IAAI,IAAI;MAChC,MAAMC,IAAI,GAAGD,IAAI,IAAIT,IAAI,CAACW,KAAK,CAACF,IAAI,CAAC;MAErC,IAAI,CAACD,QAAQ,CAACI,EAAE,EAAE;QACd,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAACC,QAAQ,CAACL,QAAQ,CAACM,MAAM,CAAC,EAAG;UACvC;UACAR,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;UAC/BT,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;UAChC;UACA;UACA;QACJ;;QAEA,MAAMC,KAAK,GAAIN,IAAI,IAAIA,IAAI,CAACO,OAAO,IAAKT,QAAQ,CAACU,UAAU;QAC3D,OAAOC,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;MAChC;MAEA,OAAON,IAAI;IACf,CAAC,CAAC;EACN;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}