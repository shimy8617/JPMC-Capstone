{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stude\\\\workspace\\\\team-6-mate\\\\final\\\\react\\\\src\\\\pages\\\\Preferences\\\\Preferences.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Layout from \"../../components/ui/Layout\";\nimport Form from 'react-bootstrap/Form';\nimport { Button, ButtonGroup } from 'react-bootstrap';\nimport { preferencesUser } from \"../../api/PreferenceApi\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getPreferencesList } from \"../../api/PreferenceApi\";\n//import { getUserPreferences} from \"../../api/PreferenceApi\";\n\nimport './Preferences.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Preferences = () => {\n  _s();\n  const userContext = useContext(UserContext);\n  const {\n    setCurrentUser\n  } = userContext;\n  const user = userContext.currentUser;\n  const navigate = useNavigate();\n  const [preferences, setPreferences] = useState([]);\n  const [restrictions, setRestrictions] = useState([]);\n  const [numberOfResults, setNumberOfResults] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getPreferencesList();\n        if (data.length > 0) {\n          const rArray = data.filter(item => item.typeId >= 0 && item.typeId < 4);\n          const pArray = data.filter(item => item.typeId > 3);\n          setRestrictions(rArray);\n          setPreferences(pArray);\n          setNumberOfResults(data.length);\n        }\n      } catch (error) {\n        console.error(\"Error fetching preferences:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const isPreferenceChecked = preferenceTypeId => {\n    return user.typeOfFood.some(item => item.typeId === preferenceTypeId);\n  };\n  const togglePreference = (typeId, isPreference) => {\n    const updatedUserPreferences = [...user.typeOfFood];\n    const itemIndex = updatedUserPreferences.findIndex(item => item.typeId === typeId);\n    if (itemIndex !== -1) {\n      // Si el item esta, eliminalo\n      updatedUserPreferences.splice(itemIndex, 1);\n    } else {\n      // Si el item no esta, agregalo\n      updatedUserPreferences.push({\n        typeId\n      });\n    }\n\n    // Estoy actualizando las preference del user\n    setCurrentUser({\n      ...user,\n      typeOfFood: updatedUserPreferences\n    });\n  };\n  const buildUniqueUserPrefList = () => {\n    const newArray = [];\n    const prefList = preferences.filter(preference => isPreferenceChecked(preference.typeId));\n    for (let i = 0; i < prefList.length; i++) {\n      const prefId = prefList[i].typeId;\n      newArray.push(prefId);\n    }\n    const restrList = restrictions.filter(restriction => isPreferenceChecked(restriction.typeId));\n    for (let i = 0; i < restrList.length; i++) {\n      const restrId = restrList[i].typeId;\n      newArray.push(restrId);\n    }\n    return newArray;\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const userPreferences = {\n        userId: user.id,\n        typeIdList: buildUniqueUserPrefList()\n      };\n      const preferenceUser = await preferencesUser(userPreferences);\n      console.log(\"Updated preferences:\", preferenceUser);\n      navigate(\"/Recomendation\");\n    } catch (error) {\n      console.error('Error updating preferences:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"My Preferences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [numberOfResults === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"No preferences found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Select your preferences: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), preferences.map(preference => /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"switch\",\n              id: `custom-switch-pref-${preference.typeId}`,\n              label: preference.categoryName,\n              name: `pref-${preference.typeId}`,\n              onChange: () => togglePreference(preference.typeId, true),\n              checked: isPreferenceChecked(preference.typeId)\n            }, preference.typeId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Select your restrictions: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), restrictions.map(restriction => /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"switch\",\n              id: `custom-switch-res-${restriction.typeId}`,\n              label: restriction.categoryName,\n              name: `res-${restriction.typeId}`,\n              onChange: () => togglePreference(restriction.typeId, false),\n              checked: isPreferenceChecked(restriction.typeId)\n            }, restriction.typeId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                onClick: handleSubmit,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Preferences, \"MgxqxJ/tbDpfpO75pHAnySFTDVU=\", false, function () {\n  return [useNavigate];\n});\n_c = Preferences;\nexport default Preferences;\nvar _c;\n$RefreshReg$(_c, \"Preferences\");","map":{"version":3,"names":["React","useState","useContext","useEffect","Layout","Form","Button","ButtonGroup","preferencesUser","UserContext","useNavigate","getPreferencesList","jsxDEV","_jsxDEV","Fragment","_Fragment","Preferences","_s","userContext","setCurrentUser","user","currentUser","navigate","preferences","setPreferences","restrictions","setRestrictions","numberOfResults","setNumberOfResults","fetchData","data","length","rArray","filter","item","typeId","pArray","error","console","isPreferenceChecked","preferenceTypeId","typeOfFood","some","togglePreference","isPreference","updatedUserPreferences","itemIndex","findIndex","splice","push","buildUniqueUserPrefList","newArray","prefList","preference","i","prefId","restrList","restriction","restrId","handleSubmit","event","preventDefault","userPreferences","userId","id","typeIdList","preferenceUser","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","Check","type","label","categoryName","name","onChange","checked","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/stude/workspace/team-6-mate/final/react/src/pages/Preferences/Preferences.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport Layout from \"../../components/ui/Layout\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\nimport { preferencesUser } from \"../../api/PreferenceApi\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getPreferencesList } from \"../../api/PreferenceApi\";\r\n//import { getUserPreferences} from \"../../api/PreferenceApi\";\r\n\r\nimport './Preferences.css';\r\n\r\nconst Preferences = () => {\r\n    \r\n    const userContext = useContext(UserContext);\r\n  const { setCurrentUser } = userContext;\r\n  const user = userContext.currentUser;\r\n  const navigate = useNavigate();\r\n\r\n  const [preferences, setPreferences] = useState([]);\r\n  const [restrictions, setRestrictions] = useState([]);\r\n  const [numberOfResults, setNumberOfResults] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const data = await getPreferencesList();\r\n\r\n        if (data.length > 0) {\r\n          const rArray = data.filter(item => item.typeId >= 0 && item.typeId < 4);\r\n          const pArray = data.filter(item => item.typeId > 3);\r\n\r\n          setRestrictions(rArray);\r\n          setPreferences(pArray);\r\n          setNumberOfResults(data.length);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching preferences:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const isPreferenceChecked = (preferenceTypeId) => {\r\n    return user.typeOfFood.some(item => item.typeId === preferenceTypeId);\r\n  };\r\n\r\n  const togglePreference = (typeId, isPreference) => {\r\n    const updatedUserPreferences = [...user.typeOfFood];\r\n    const itemIndex = updatedUserPreferences.findIndex(item => item.typeId === typeId);\r\n\r\n    if (itemIndex !== -1) {\r\n      // Si el item esta, eliminalo\r\n      updatedUserPreferences.splice(itemIndex, 1);\r\n    } else {\r\n      // Si el item no esta, agregalo\r\n      updatedUserPreferences.push({ typeId });\r\n    }\r\n\r\n    // Estoy actualizando las preference del user\r\n    setCurrentUser({ ...user, typeOfFood: updatedUserPreferences });\r\n  };\r\n\r\n  const buildUniqueUserPrefList = () => {\r\n    const newArray = [];\r\n    const prefList = preferences.filter(preference => isPreferenceChecked(preference.typeId));\r\n        for(let i = 0; i < prefList.length; i++) {\r\n            const prefId = prefList[i].typeId;\r\n            newArray.push(prefId);\r\n        }\r\n    const restrList = restrictions.filter(restriction => isPreferenceChecked(restriction.typeId));\r\n        for(let i = 0; i <restrList.length; i++) {\r\n            const restrId = restrList[i].typeId;\r\n            newArray.push(restrId);\r\n        }\r\n    return newArray;\r\n    \r\n  }\r\n\r\n\r\n  \r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const userPreferences = {\r\n        userId: user.id,\r\n        typeIdList: buildUniqueUserPrefList()\r\n      };\r\n\r\n      const preferenceUser = await preferencesUser(userPreferences);\r\n\r\n      console.log(\"Updated preferences:\", preferenceUser);\r\n      navigate(\"/Recomendation\");\r\n\r\n    } catch (error) {\r\n      console.error('Error updating preferences:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <div className=\"container\">\r\n          <div className=\"form-container\">\r\n            <h3>My Preferences</h3>\r\n            <Form>\r\n              {(numberOfResults === 0) && <div>No preferences found</div>}\r\n              <h4>Select your preferences: </h4>\r\n              {preferences.map(preference => (\r\n                <Form.Check\r\n                  key={preference.typeId}\r\n                  type=\"switch\"\r\n                  id={`custom-switch-pref-${preference.typeId}`}\r\n                  label={preference.categoryName}\r\n                  name={`pref-${preference.typeId}`}\r\n                  onChange={() => togglePreference(preference.typeId, true)}\r\n                  checked={isPreferenceChecked(preference.typeId)}\r\n                />\r\n              ))}\r\n              <h4>Select your restrictions: </h4>\r\n              {restrictions.map(restriction => (\r\n                <Form.Check\r\n                  key={restriction.typeId}\r\n                  type=\"switch\"\r\n                  id={`custom-switch-res-${restriction.typeId}`}\r\n                  label={restriction.categoryName}\r\n                  name={`res-${restriction.typeId}`}\r\n                  onChange={() => togglePreference(restriction.typeId, false)}\r\n                  checked={isPreferenceChecked(restriction.typeId)}\r\n                />\r\n              ))}\r\n              <ButtonGroup>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\r\n                  Submit\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\nexport default Preferences;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}