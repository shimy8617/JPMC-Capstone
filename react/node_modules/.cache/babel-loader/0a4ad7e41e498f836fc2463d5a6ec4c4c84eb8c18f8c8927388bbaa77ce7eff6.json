{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stude\\\\workspace\\\\team-6-mate\\\\final\\\\react\\\\src\\\\pages\\\\Preferences\\\\Preferences.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Layout from \"../../components/ui/Layout\";\nimport Form from 'react-bootstrap/Form';\nimport { Button, ButtonGroup } from 'react-bootstrap';\nimport { preferencesUser } from \"../../api/PreferenceApi\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getPreferencesList } from \"../../api/PreferenceApi\";\n//import { getUserPreferences} from \"../../api/PreferenceApi\";\n\nimport './Preferences.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Preferences = () => {\n  _s();\n  const userContext = useContext(UserContext);\n  const {\n    setCurrentUser\n  } = userContext.setCurrentUser;\n  const user = userContext.currentUser;\n  const navigate = useNavigate();\n  const [preferences, setPreferences] = useState([]);\n  const [restrictions, setRestrictions] = useState([]);\n  const [numberOfResults, setNumberOfRecords] = useState(0);\n  // aca guardo mis preferencias con el useState\n  const [checkedPreference, setCheckedPreference] = useState([]);\n  const [checkedRestriction, setCheckedRestriction] = useState([]);\n  const [zipCode, setZipCode] = useState();\n  const isPreferenceChecked = preferenceTypeId => {\n    for (let i = 0; i < user.typeOfFood.length; i++) {\n      if (user.typeOfFood[i].typeId === preferenceTypeId) {\n        return true;\n      }\n    }\n    return false;\n  };\n  const isRestrictionChecked = restrictionTypeId => {\n    for (let i = 0; i < user.typeOfFood.length; i++) {\n      if (user.typeOfFood[i].typeId === restrictionTypeId) {}\n    }\n    return user.typeOfFood.typeId === restrictionTypeId;\n  };\n\n  //    const [isChecked, setIsChecked] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getPreferencesList(); // Assuming getPreferencesList is an async function that returns your data\n\n        if (data.length > 0) {\n          let rArray = [];\n          let pArray = [];\n          for (var i = 0; i < data.length; i++) {\n            if (data[i].typeId >= 0 && data[i].typeId < 4) {\n              rArray.push(data[i]);\n            } else if (data[i].typeId > 4) {\n              pArray.push(data[i]);\n            }\n          }\n          setRestrictions(rArray);\n          setPreferences(pArray);\n          setNumberOfRecords(data.length);\n\n          // const userPreferencesChecked = await getUserPreferences();\n\n          // if (userPreferencesChecked.length > 0){\n          //     for (var j = 0; j < userPreferencesChecked.length; j++){\n          //         for (var k = 0; k < preferences.length; k++){\n          //             if(userPreferencesChecked[j] === preferences[k]){\n          //                 console.log (\"checkeado\");\n          //             }else{\n          //                 console.log (\"no checkeado\")\n          //             }\n          //         }\n\n          //     }\n          // }\n        }\n      } catch (error) {\n        console.error(\"Error fetching preferences:\", error);\n      }\n    };\n    fetchData();\n  }, []); // Run this effect only once when the component mounts\n\n  const handleChange = e => {\n    // guardo el nombre de mi preferencia en la variable\n    const preferenceName = e.target.name;\n    // guardo los chequeados\n    const isChecked = e.target.checked;\n    if (isChecked) {\n      if (parseInt(preferenceName) > 3) {\n        setCheckedPreference([...checkedPreference, preferenceName]);\n        console.log(\"check preference: \" + preferenceName);\n      } else if (parseInt(preferenceName) >= 0 && parseInt(preferenceName) <= 3) {\n        setCheckedRestriction([...checkedRestriction, preferenceName]);\n        console.log(\"check restriction: \" + preferenceName);\n      }\n    } else {\n      if (parseInt(preferenceName) > 3) {\n        setCheckedPreference([preferences.filter(prevPref => prevPref !== preferenceName)]);\n        console.log(\"unchecked preference: \" + preferenceName);\n      } else if (parseInt(preferenceName) >= 0 && parseInt(preferenceName) <= 3) {\n        setCheckedRestriction([restrictions.filter(prevRestr => prevRestr !== preferenceName)]);\n        console.log(\"unchecked restriction: \" + preferenceName);\n      }\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const userRegister = {\n        ...checkedPreference,\n        zipCode\n      };\n      const preferenceUser = await preferencesUser(userRegister);\n      if (preferenceUser) {\n        preferenceUser.user.isAuthenticated = true;\n        localStorage.setItem('typeId', JSON.stringify(preferenceUser.user));\n        setCurrentUser(preferenceUser.user);\n        navigate(\"/Recomendation\");\n      }\n      console.log(\"se guardo el array\" + checkedPreference);\n    } catch (error) {\n      console.log('user created encounter an error', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"My Preferences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form /*onSubmit={handleSearch}*/, {\n            children: [numberOfResults === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"No preferences found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Select your preferences: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 21\n            }, this), preferences.map(preference => /*#__PURE__*/_jsxDEV(Form.Check, {\n              // Agrego un id unico\n              type: \"switch\",\n              id: `custom-switch-${preference.typeId}` // Hago uso del unique id\n              ,\n              label: preference.categoryName\n              // le voy asignando el nombre para ir guardandolo en la base de datos\n              ,\n              name: preference.typeId\n              //value={typeOfFood}\n              ,\n              onChange: handleChange,\n              checked: isPreferenceChecked(preference.typeId)\n            }, preference.typeId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Select your restrictions: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 21\n            }, this), restrictions.map(restriction => /*#__PURE__*/_jsxDEV(Form.Check, {\n              // Agrego un id unico\n              type: \"switch\",\n              id: `custom-switch-${restriction.typeId}` // Hago uso del unique id\n              ,\n              label: restriction.categoryName\n              // le voy asignando el nombre para ir guardandolo en la base de datos\n              ,\n              name: restriction.typeId\n              // value={typeOfFood}\n              ,\n              onChange: handleChange,\n              checked: isRestrictionChecked(restriction.typeId)\n            }, restriction.typeId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Select the zip code of the preferred area: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                onSubmit: handleSubmit,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Preferences, \"fbddOcdqtA0LVcFEFiQU4quHfVQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Preferences;\nexport default Preferences;\nvar _c;\n$RefreshReg$(_c, \"Preferences\");","map":{"version":3,"names":["React","useState","useContext","useEffect","Layout","Form","Button","ButtonGroup","preferencesUser","UserContext","useNavigate","getPreferencesList","jsxDEV","_jsxDEV","Fragment","_Fragment","Preferences","_s","userContext","setCurrentUser","user","currentUser","navigate","preferences","setPreferences","restrictions","setRestrictions","numberOfResults","setNumberOfRecords","checkedPreference","setCheckedPreference","checkedRestriction","setCheckedRestriction","zipCode","setZipCode","isPreferenceChecked","preferenceTypeId","i","typeOfFood","length","typeId","isRestrictionChecked","restrictionTypeId","fetchData","data","rArray","pArray","push","error","console","handleChange","e","preferenceName","target","name","isChecked","checked","parseInt","log","filter","prevPref","prevRestr","handleSubmit","event","preventDefault","userRegister","preferenceUser","isAuthenticated","localStorage","setItem","JSON","stringify","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","preference","Check","type","id","label","categoryName","onChange","restriction","variant","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/stude/workspace/team-6-mate/final/react/src/pages/Preferences/Preferences.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport Layout from \"../../components/ui/Layout\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\nimport { preferencesUser } from \"../../api/PreferenceApi\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getPreferencesList } from \"../../api/PreferenceApi\";\r\n//import { getUserPreferences} from \"../../api/PreferenceApi\";\r\n\r\nimport './Preferences.css';\r\n\r\nconst Preferences = () => {\r\n    \r\n    const userContext =  useContext(UserContext);\r\n    const { setCurrentUser } = userContext.setCurrentUser;\r\n    const user = userContext.currentUser;\r\n    const navigate = useNavigate();    \r\n\r\n    const [preferences, setPreferences] = useState([]);\r\n    const [restrictions, setRestrictions] = useState([]);\r\n    const [numberOfResults, setNumberOfRecords] = useState(0);\r\n    // aca guardo mis preferencias con el useState\r\n    const[checkedPreference, setCheckedPreference] = useState([]);\r\n    const[checkedRestriction, setCheckedRestriction] = useState([]);\r\n    const [zipCode, setZipCode] =  useState();\r\n\r\n    const isPreferenceChecked = (preferenceTypeId) => {\r\n        for (let i=0; i<user.typeOfFood.length; i++){\r\n            if (user.typeOfFood[i].typeId === preferenceTypeId){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n     };\r\n\r\n    const isRestrictionChecked = (restrictionTypeId) => {\r\n        for(let i =0; i< user.typeOfFood.length; i++) {\r\n            if(user.typeOfFood[i].typeId === restrictionTypeId) {\r\n                \r\n            }\r\n        }\r\n         return user.typeOfFood.typeId === restrictionTypeId;\r\n    };\r\n\r\n//    const [isChecked, setIsChecked] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const data = await getPreferencesList(); // Assuming getPreferencesList is an async function that returns your data\r\n\r\n                \r\n                if (data.length > 0) {\r\n                    let rArray = [];\r\n                    let pArray = [];\r\n                    for(var i =0; i < data.length; i++) {\r\n                        if(data[i].typeId >= 0 && data[i].typeId < 4) {\r\n                            rArray.push(data[i]); \r\n                        } else if (data[i].typeId > 4) {\r\n                            pArray.push(data[i]);\r\n                        }\r\n                    }\r\n                    setRestrictions(rArray);\r\n                    setPreferences(pArray);\r\n                    setNumberOfRecords(data.length);\r\n\r\n                   // const userPreferencesChecked = await getUserPreferences();\r\n\r\n                    // if (userPreferencesChecked.length > 0){\r\n                    //     for (var j = 0; j < userPreferencesChecked.length; j++){\r\n                    //         for (var k = 0; k < preferences.length; k++){\r\n                    //             if(userPreferencesChecked[j] === preferences[k]){\r\n                    //                 console.log (\"checkeado\");\r\n                    //             }else{\r\n                    //                 console.log (\"no checkeado\")\r\n                    //             }\r\n                    //         }\r\n                            \r\n                    //     }\r\n                    // }\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching preferences:\", error);\r\n            }\r\n        }; \r\n        fetchData();\r\n    }, []); // Run this effect only once when the component mounts\r\n\r\n    \r\n    const handleChange = (e) => {\r\n        // guardo el nombre de mi preferencia en la variable\r\n        const preferenceName = e.target.name;\r\n        // guardo los chequeados\r\n        const isChecked = e.target.checked;\r\n\r\n        if(isChecked) {\r\n            if (parseInt(preferenceName) > 3) {\r\n                setCheckedPreference([...checkedPreference, preferenceName]);\r\n                console.log(\"check preference: \" + preferenceName)\r\n            }   else if(parseInt(preferenceName) >= 0 && parseInt(preferenceName) <= 3) {\r\n                setCheckedRestriction([...checkedRestriction, preferenceName]);\r\n                console.log(\"check restriction: \" + preferenceName)\r\n                } \r\n            } else {\r\n                if (parseInt(preferenceName) > 3) {\r\n                setCheckedPreference([preferences.filter(prevPref => prevPref !== preferenceName)]);\r\n                console.log(\"unchecked preference: \" + preferenceName);\r\n                }  else if (parseInt(preferenceName) >= 0 && parseInt(preferenceName) <= 3) {\r\n                  setCheckedRestriction([restrictions.filter(prevRestr => prevRestr !== preferenceName)]);\r\n                  console.log(\"unchecked restriction: \" + preferenceName)\r\n                }\r\n              }   \r\n    }\r\n\r\n    const handleSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const userRegister = { ...checkedPreference, zipCode }; \r\n            const preferenceUser = await preferencesUser(userRegister);\r\n            \r\n            \r\n            if (preferenceUser) {                  \r\n                preferenceUser.user.isAuthenticated = true;\r\n                localStorage.setItem('typeId', JSON.stringify(preferenceUser.user));\r\n                 \r\n                setCurrentUser(preferenceUser.user);\r\n                navigate(\"/Recomendation\");\r\n                }\r\n            \r\n                console.log(\"se guardo el array\" + checkedPreference);\r\n        } catch(error) {\r\n            console.log('user created encounter an error', error);\r\n        }\r\n    }\r\n  \r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <div className=\"container\">\r\n                <div className=\"form-container\">\r\n                <h2>My Preferences</h2>\r\n                <Form /*onSubmit={handleSearch}*/>\r\n                {(numberOfResults === 0) &&\r\n                    <div>No preferences found</div>\r\n                }\r\n                    <h4>Select your preferences: </h4>\r\n                    {preferences.map(preference => (\r\n                    <Form.Check // prettier-ignore\r\n                        key={preference.typeId} // Agrego un id unico\r\n                        type=\"switch\"\r\n                        id={`custom-switch-${preference.typeId}`} // Hago uso del unique id\r\n                        label={preference.categoryName}\r\n                        // le voy asignando el nombre para ir guardandolo en la base de datos\r\n                        name={preference.typeId}\r\n                        //value={typeOfFood}\r\n                        onChange={handleChange}\r\n                        checked={isPreferenceChecked(preference.typeId)}\r\n                    />\r\n                    ))}\r\n                    <h4>Select your restrictions: </h4>\r\n                    {restrictions.map(restriction => (\r\n                    <Form.Check // prettier-ignore\r\n                        key={restriction.typeId} // Agrego un id unico\r\n                        type=\"switch\"\r\n                        id={`custom-switch-${restriction.typeId}`} // Hago uso del unique id\r\n                        label={restriction.categoryName}\r\n                        // le voy asignando el nombre para ir guardandolo en la base de datos\r\n                        name={restriction.typeId}\r\n                        // value={typeOfFood}\r\n                        onChange={handleChange}\r\n                        checked={isRestrictionChecked(restriction.typeId)}\r\n                    />\r\n                    ))}\r\n\r\n                    <p>Select the zip code of the preferred area: </p>\r\n\r\n\r\n                    \r\n                    {/* <div >\r\n                    <label >Zip Code</label>\r\n                    <input type=\"number\" onChange={e => setZipCode(e.target.value)} value={zipCode} name=\"zipCode\" placeholder=\"Zip Code\" required />\r\n                    <div>\r\n                        Please provide a valid zip code.\r\n                    </div>\r\n                    </div> */}\r\n\r\n                    <ButtonGroup>\r\n                        <Button variant=\"primary\" type=\"submit\" onSubmit={handleSubmit}>\r\n                            Submit\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                </Form>\r\n                </div>\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\nexport default Preferences;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}