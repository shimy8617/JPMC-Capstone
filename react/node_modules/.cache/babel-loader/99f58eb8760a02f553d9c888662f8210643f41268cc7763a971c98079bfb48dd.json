{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stude\\\\workspace\\\\team-6-mate\\\\final\\\\react\\\\src\\\\pages\\\\Preferences\\\\Preferences.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Layout from \"../../components/ui/Layout\";\nimport Form from 'react-bootstrap/Form';\nimport { Button, ButtonGroup } from 'react-bootstrap';\nimport { preferencesUser } from \"../../api/PreferenceApi\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getPreferencesList } from \"../../api/PreferenceApi\";\n//import { getUserPreferences} from \"../../api/PreferenceApi\";\n\nimport './Preferences.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Preferences = () => {\n  _s();\n  const userContext = useContext(UserContext);\n  const {\n    setCurrentUser\n  } = userContext.setCurrentUser;\n  const user = userContext.currentUser;\n  const navigate = useNavigate();\n  const [preferences, setPreferences] = useState([]);\n  const [restrictions, setRestrictions] = useState([]);\n  const [numberOfResults, setNumberOfRecords] = useState(0);\n  // aca guardo mis preferencias con el useState\n  const [checkedPreference, setCheckedPreference] = useState([]);\n  const [checkedRestriction, setCheckedRestriction] = useState([]);\n\n  //    const [isChecked, setIsChecked] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getPreferencesList(); // Assuming getPreferencesList is an async function that returns your data\n\n        if (data.length > 0) {\n          let rArray = [];\n          let pArray = [];\n          for (var i = 0; i < data.length; i++) {\n            if (data[i].typeId >= 0 && data[i].typeId < 4) {\n              rArray.push(data[i]);\n            } else if (data[i].typeId > 3) {\n              pArray.push(data[i]);\n            }\n          }\n          setRestrictions(rArray);\n          setPreferences(pArray);\n          setNumberOfRecords(data.length);\n        }\n      } catch (error) {\n        console.error(\"Error fetching preferences:\", error);\n      }\n    };\n    fetchData();\n  }, []); // Run this effect only once when the component mounts\n\n  const isPreferenceChecked = (preferenceTypeId /*,e*/) => {\n    // const preferenceName = e.target.name;\n    // // guardo los chequeados\n    // const isChecked = e.target.checked;\n    for (let i = 0; i < user.typeOfFood.length; i++) {\n      return user.typeOfFood.some(food => food.typeId === preferenceTypeId);\n      // if(!isChecked) {\n      //     setCheckedPreference([...checkedPreference, preferenceName]);\n      // } else {\n      //     setCheckedPreference([preferences.filter(prevPref => prevPref !== preferenceName)]);\n      // }\n    }\n\n    return false;\n  };\n  const isRestrictionChecked = (restrictionTypeId /*,e*/) => {\n    // const preferenceName = e.target.name;\n    // guardo los chequeados\n    // const isChecked = e.target.checked;\n    for (let i = 0; i < user.typeOfFood.length; i++) {\n      return user.typeOfFood.some(food => food.typeId === restrictionTypeId); // if(!isChecked) {\n      //     setCheckedRestriction([...checkedRestriction, preferenceName]);\n      // } else{\n      //     setCheckedRestriction([restrictions.filter(prevRestr => prevRestr !== preferenceName)]);\n      // }\n    }\n\n    return false;\n  };\n  // const handleChange = (e, isPreference) => {\n  //     // guardo el nombre de mi preferencia en la variable\n  //     const preferenceName = e.target.name;\n  //     // guardo los chequeados\n  //     const isChecked = e.target.checked;\n\n  //     if (isChecked) {\n  //         if (isPreference) {\n  //           setCheckedPreference((prevChecked) => [...prevChecked, preferenceName]);\n  //           console.log(\"check preference: \" + preferenceName);\n  //         } else {\n  //           setCheckedRestriction((prevChecked) => [...prevChecked, preferenceName]);\n  //           console.log(\"check restriction: \" + preferenceName);\n  //         }\n  //       } else {\n  //         if (isPreference) {\n  //           setCheckedPreference((prevChecked) =>\n  //             prevChecked.filter((prevPref) => prevPref !== preferenceName)\n  //           );\n  //           console.log(\"unchecked preference: \" + preferenceName);\n  //         } else {\n  //           setCheckedRestriction((prevChecked) =>\n  //             prevChecked.filter((prevRestr) => prevRestr !== preferenceName)\n  //           );\n  //           console.log(\"unchecked restriction: \" + preferenceName);\n  //         }\n  //       }\n  //     };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const userRegister = {\n        ...checkedPreference\n      };\n      const preferenceUser = await preferencesUser(userRegister);\n      if (preferenceUser) {\n        preferenceUser.user.isAuthenticated = true;\n        localStorage.setItem('typeId', JSON.stringify(preferenceUser.user));\n        setCurrentUser(preferenceUser.user);\n        navigate(\"/Recomendation\");\n      }\n      console.log(\"se guardo el array\" + checkedPreference);\n    } catch (error) {\n      console.log('user created encounter an error', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"My Preferences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form /*onSubmit={handleSearch}*/, {\n            children: [numberOfResults === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"No preferences found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Select your preferences: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 21\n            }, this), preferences.map(preference => /*#__PURE__*/_jsxDEV(Form.Check, {\n              // Agrego un id unico\n              type: \"switch\",\n              id: `custom-switch-${preference.typeId}` // Hago uso del unique id\n              ,\n              label: preference.categoryName\n              // le voy asignando el nombre para ir guardandolo en la base de datos\n              ,\n              name: preference.typeId\n              //value={typeOfFood}\n              // Paso true para indicar preferencia\n              ,\n              onChange: e => handleChange(e, true),\n              checked: isPreferenceChecked(preference.typeId)\n            }, preference.typeId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Select your restrictions: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 21\n            }, this), restrictions.map(restriction => /*#__PURE__*/_jsxDEV(Form.Check, {\n              // Agrego un id unico\n              type: \"switch\",\n              id: `custom-switch-${restriction.typeId}` // Hago uso del unique id\n              ,\n              label: restriction.categoryName\n              // le voy asignando el nombre para ir guardandolo en la base de datos\n              ,\n              name: restriction.typeId\n              // value={typeOfFood}\n              // Paso false para indicar restriction\n              ,\n              onChange: e => handleChange(e, false),\n              checked: isRestrictionChecked(restriction.typeId)\n            }, restriction.typeId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                onSubmit: handleSubmit,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Preferences, \"xqjZhHW/T4cp14zR5+Tu5wl9mYQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Preferences;\nexport default Preferences;\nvar _c;\n$RefreshReg$(_c, \"Preferences\");","map":{"version":3,"names":["React","useState","useContext","useEffect","Layout","Form","Button","ButtonGroup","preferencesUser","UserContext","useNavigate","getPreferencesList","jsxDEV","_jsxDEV","Fragment","_Fragment","Preferences","_s","userContext","setCurrentUser","user","currentUser","navigate","preferences","setPreferences","restrictions","setRestrictions","numberOfResults","setNumberOfRecords","checkedPreference","setCheckedPreference","checkedRestriction","setCheckedRestriction","fetchData","data","length","rArray","pArray","i","typeId","push","error","console","isPreferenceChecked","preferenceTypeId","typeOfFood","some","food","isRestrictionChecked","restrictionTypeId","handleSubmit","event","preventDefault","userRegister","preferenceUser","isAuthenticated","localStorage","setItem","JSON","stringify","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","preference","Check","type","id","label","categoryName","name","onChange","e","handleChange","checked","restriction","variant","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/stude/workspace/team-6-mate/final/react/src/pages/Preferences/Preferences.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport Layout from \"../../components/ui/Layout\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\nimport { preferencesUser } from \"../../api/PreferenceApi\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getPreferencesList } from \"../../api/PreferenceApi\";\r\n//import { getUserPreferences} from \"../../api/PreferenceApi\";\r\n\r\nimport './Preferences.css';\r\n\r\nconst Preferences = () => {\r\n    \r\n    const userContext =  useContext(UserContext);\r\n    const { setCurrentUser } = userContext.setCurrentUser;\r\n    const user = userContext.currentUser;\r\n    const navigate = useNavigate();    \r\n\r\n    const [preferences, setPreferences] = useState([]);\r\n    const [restrictions, setRestrictions] = useState([]);\r\n    const [numberOfResults, setNumberOfRecords] = useState(0);\r\n    // aca guardo mis preferencias con el useState\r\n    const[checkedPreference, setCheckedPreference] = useState([]);\r\n    const[checkedRestriction, setCheckedRestriction] = useState([]);\r\n\r\n    \r\n\r\n//    const [isChecked, setIsChecked] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const data = await getPreferencesList(); // Assuming getPreferencesList is an async function that returns your data\r\n\r\n                \r\n                if (data.length > 0) {\r\n                    let rArray = [];\r\n                    let pArray = [];\r\n                    for(var i =0; i < data.length; i++) {\r\n                        if(data[i].typeId >= 0 && data[i].typeId < 4) {\r\n                            rArray.push(data[i]); \r\n                        } else if (data[i].typeId > 3) {\r\n                            pArray.push(data[i]);\r\n                        }\r\n                    }\r\n                    setRestrictions(rArray);\r\n                    setPreferences(pArray);\r\n                    setNumberOfRecords(data.length);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching preferences:\", error);\r\n            }\r\n        }; \r\n        fetchData();\r\n    }, []); // Run this effect only once when the component mounts\r\n\r\n    const isPreferenceChecked = (preferenceTypeId/*,e*/) => {\r\n        // const preferenceName = e.target.name;\r\n        // // guardo los chequeados\r\n        // const isChecked = e.target.checked;\r\n        for (let i=0; i<user.typeOfFood.length; i++){\r\n            return user.typeOfFood.some((food) => food.typeId === preferenceTypeId);\r\n                // if(!isChecked) {\r\n                //     setCheckedPreference([...checkedPreference, preferenceName]);\r\n                // } else {\r\n                //     setCheckedPreference([preferences.filter(prevPref => prevPref !== preferenceName)]);\r\n                // }\r\n\r\n        }\r\n        return false;\r\n     };\r\n     \r\n\r\n    const isRestrictionChecked = (restrictionTypeId/*,e*/) => {\r\n        // const preferenceName = e.target.name;\r\n        // guardo los chequeados\r\n        // const isChecked = e.target.checked;\r\n        for(let i =0; i< user.typeOfFood.length; i++) {\r\n            return user.typeOfFood.some((food) => food.typeId === restrictionTypeId);                // if(!isChecked) {\r\n                //     setCheckedRestriction([...checkedRestriction, preferenceName]);\r\n                // } else{\r\n                //     setCheckedRestriction([restrictions.filter(prevRestr => prevRestr !== preferenceName)]);\r\n                // }\r\n\r\n        }\r\n         return false;\r\n    };\r\n    // const handleChange = (e, isPreference) => {\r\n    //     // guardo el nombre de mi preferencia en la variable\r\n    //     const preferenceName = e.target.name;\r\n    //     // guardo los chequeados\r\n    //     const isChecked = e.target.checked;\r\n\r\n    //     if (isChecked) {\r\n    //         if (isPreference) {\r\n    //           setCheckedPreference((prevChecked) => [...prevChecked, preferenceName]);\r\n    //           console.log(\"check preference: \" + preferenceName);\r\n    //         } else {\r\n    //           setCheckedRestriction((prevChecked) => [...prevChecked, preferenceName]);\r\n    //           console.log(\"check restriction: \" + preferenceName);\r\n    //         }\r\n    //       } else {\r\n    //         if (isPreference) {\r\n    //           setCheckedPreference((prevChecked) =>\r\n    //             prevChecked.filter((prevPref) => prevPref !== preferenceName)\r\n    //           );\r\n    //           console.log(\"unchecked preference: \" + preferenceName);\r\n    //         } else {\r\n    //           setCheckedRestriction((prevChecked) =>\r\n    //             prevChecked.filter((prevRestr) => prevRestr !== preferenceName)\r\n    //           );\r\n    //           console.log(\"unchecked restriction: \" + preferenceName);\r\n    //         }\r\n    //       }\r\n    //     };\r\n\r\n    const handleSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const userRegister = { ...checkedPreference }; \r\n            const preferenceUser = await preferencesUser(userRegister);\r\n            \r\n            \r\n            if (preferenceUser) {                  \r\n                preferenceUser.user.isAuthenticated = true;\r\n                localStorage.setItem('typeId', JSON.stringify(preferenceUser.user));\r\n                 \r\n                setCurrentUser(preferenceUser.user);\r\n                navigate(\"/Recomendation\");\r\n                }\r\n            \r\n                console.log(\"se guardo el array\" + checkedPreference);\r\n        } catch(error) {\r\n            console.log('user created encounter an error', error);\r\n        }\r\n    }\r\n  \r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <div className=\"container\">\r\n                <div className=\"form-container\">\r\n                <h2>My Preferences</h2>\r\n                <Form /*onSubmit={handleSearch}*/>\r\n                {(numberOfResults === 0) &&\r\n                    <div>No preferences found</div>\r\n                }\r\n                    <h4>Select your preferences: </h4>\r\n                    {preferences.map(preference => (\r\n                    <Form.Check // prettier-ignore\r\n                        key={preference.typeId} // Agrego un id unico\r\n                        type=\"switch\"\r\n                        id={`custom-switch-${preference.typeId}`} // Hago uso del unique id\r\n                        label={preference.categoryName}\r\n                        // le voy asignando el nombre para ir guardandolo en la base de datos\r\n                        name={preference.typeId}\r\n                        //value={typeOfFood}\r\n                        // Paso true para indicar preferencia\r\n                        onChange={(e) => handleChange(e, true)}\r\n                        checked={isPreferenceChecked(preference.typeId)}\r\n                    />\r\n                    ))}\r\n                    <h4>Select your restrictions: </h4>\r\n                    {restrictions.map(restriction => (\r\n                    <Form.Check // prettier-ignore\r\n                        key={restriction.typeId} // Agrego un id unico\r\n                        type=\"switch\"\r\n                        id={`custom-switch-${restriction.typeId}`} // Hago uso del unique id\r\n                        label={restriction.categoryName}\r\n                        // le voy asignando el nombre para ir guardandolo en la base de datos\r\n                        name={restriction.typeId}\r\n                        // value={typeOfFood}\r\n                        // Paso false para indicar restriction\r\n                        onChange={(e) => handleChange(e, false)}\r\n                        checked={isRestrictionChecked(restriction.typeId)}\r\n                    />\r\n                    ))}\r\n\r\n\r\n                    \r\n                    {/* <div >\r\n                    <label >Zip Code</label>\r\n                    <input type=\"number\" onChange={e => setZipCode(e.target.value)} value={zipCode} name=\"zipCode\" placeholder=\"Zip Code\" required />\r\n                    <div>\r\n                        Please provide a valid zip code.\r\n                    </div>\r\n                    </div> */}\r\n\r\n                    <ButtonGroup>\r\n                        <Button variant=\"primary\" type=\"submit\" onSubmit={handleSubmit}>\r\n                            Submit\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                </Form>\r\n                </div>\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\nexport default Preferences;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}