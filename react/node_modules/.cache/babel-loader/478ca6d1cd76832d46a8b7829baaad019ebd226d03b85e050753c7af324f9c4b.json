{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stude\\\\workspace\\\\team-6-mate\\\\final\\\\react\\\\src\\\\pages\\\\Register\\\\Register.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext, useEffect } from 'react';\nimport Layout from \"../../components/ui/Layout\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { registerUser } from '../../api/UserApi';\nimport { useNavigate } from \"react-router-dom\";\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { getPreferencesList } from '../../api/PreferenceApi';\nimport { savePreferences } from '../../api/PreferenceApi';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport * as formik from 'formik';\nimport * as yup from 'yup';\nimport './Register.css';\n\n// defino los valores iniciales\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  username: '',\n  password: '',\n  confirmPassword: '',\n  fullName: '',\n  email: '',\n  zipCode: '',\n  address: '',\n  role: 'User',\n  preferencesArray: []\n};\n\n// defino las validaciones de yup schema\nconst validationSchema = yup.object().shape({\n  username: yup.string().required('Username is required'),\n  password: yup.string().required('Password is required'),\n  confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match').required('Confirm Password is required'),\n  fullName: yup.string().required('Full Name is required'),\n  email: yup.string().email('Invalid email').required('Email is required'),\n  zipCode: yup.string().required('Zip Code is required'),\n  address: yup.string().required('Address is required')\n});\nconst Register = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  const [formFields, setFormFields] = useState(initialValues);\n  const {\n    username,\n    password,\n    confirmPassword,\n    fullName,\n    email,\n    zipCode,\n    address,\n    role,\n    preferencesArray\n  } = formFields;\n  const {\n    setCurrentUser\n  } = useContext(UserContext);\n  const [preferences, setPreferences] = useState([]);\n  const [restrictions, setRestrictions] = useState([]);\n  const [numberOfResults, setNumberOfRecords] = useState(0);\n  const [checkedPreference, setCheckedPreference] = useState([]);\n  const [checkedRestriction, setCheckedRestriction] = useState([]);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const {\n    Formik\n  } = formik;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getPreferencesList(); // Assuming getPreferencesList is an async function that returns your data\n\n        if (data.length > 0) {\n          let rArray = [];\n          let pArray = [];\n          for (var i = 0; i < data.length; i++) {\n            if (data[i].typeId >= 0 && data[i].typeId < 4) {\n              rArray.push(data[i]);\n            } else if (data[i].typeId > 3) {\n              pArray.push(data[i]);\n            }\n          }\n          setRestrictions(rArray);\n          setPreferences(pArray);\n          setNumberOfRecords(data.length);\n        }\n      } catch (error) {\n        console.error(\"Error fetching preferences:\", error);\n      }\n    };\n    fetchData();\n  }, []); // Corre el useEffect una sola vez cuanto se monta el componente\n\n  // estoy chequeando que queden todos mis datos seleccionados en el nuevo array\n  // de manera inmediata y sin retraso como lo hace el console.log\n  useEffect(() => {\n    console.log(\"Updated preferencesArray:\", formFields.preferencesArray);\n  }, [formFields.preferencesArray]);\n  const handleSubmit = async event => {\n    // event.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"password do not match\");\n      return;\n    }\n    if (checkedPreference.length === 0 && checkedRestriction.length === 0) {\n      alert(\"please select your preferences\");\n      return;\n    }\n    try {\n      const userRegister = {\n        ...formFields,\n        role: \"User\"\n      };\n      const registeredInUser = await registerUser(userRegister);\n      if (registeredInUser) {\n        registeredInUser.user.isAuthenticated = true;\n        localStorage.setItem('user', JSON.stringify(registeredInUser.user));\n        localStorage.setItem('token', registeredInUser.token);\n        setCurrentUser(registeredInUser.user);\n        await savePreferences(formFields.preferencesArray);\n        navigate(\"/Recomendation\");\n      }\n    } catch (error) {\n      console.log('user created encounter an error', error);\n    }\n  };\n\n  //  Este handlecheck se utiliza solo para las preferencias y restricciones\n  const handleCheck = event => {\n    const {\n      name,\n      value,\n      checked\n    } = event.target;\n    setFormFields({\n      ...formFields,\n      [name]: value\n    });\n    if (checked) {\n      if (parseInt(name) > 3) {\n        setCheckedPreference([...checkedPreference, name]);\n        console.log(\"check preference: \" + name);\n      } else if (parseInt(name) >= 0 && parseInt(name) <= 3) {\n        setCheckedRestriction([...checkedRestriction, name]);\n        console.log(\"check restriction: \" + name);\n      }\n    } else {\n      if (parseInt(name) > 3) {\n        setCheckedPreference([preferences.filter(prevPref => prevPref !== name)]);\n        console.log(\"unchecked preference: \" + name);\n      } else if (parseInt(name) >= 0 && parseInt(name) <= 3) {\n        setCheckedRestriction([restrictions.filter(prevRestr => prevRestr !== name)]);\n        console.log(\"unchecked restriction: \" + name);\n      }\n    }\n  };\n\n  // Es para guardar las preferencias y restricciones\n  const handleSave = e => {\n    let userPreferences = [];\n    if (checkedPreference.length === 0 && checkedRestriction.length === 0) {\n      alert(\"Please choose at least one preference\");\n    } else {\n      if (checkedPreference.length !== 0) {\n        // // Uso los puntos suspensivos para agregar las preferencias seleccionadas individualmente\n        userPreferences.push(...checkedPreference);\n      }\n      if (checkedRestriction.length !== 0) {\n        userPreferences.push(...checkedRestriction);\n      }\n      // seteo las preferencias seleccionadas en el formFields state\n      setFormFields({\n        ...formFields,\n        preferencesArray: userPreferences\n      });\n\n      // Cierro el modal una vez guardado\n      handleClose();\n    }\n    console.log(\"Updated preferencesArray:\", formFields.preferencesArray);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: handleSubmit,\n        children: _ref2 => {\n          let {\n            handleSubmit,\n            handleChange,\n            values,\n            touched,\n            errors\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            noValidate: true,\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: \"4\",\n                controlId: \"validationFormik01\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"label\",\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\"\n                  // como estoy usando formik, tuve que setear formfields individualmente\n                  // para no mezclar los handlechange\n                  ,\n                  onChange: e => {\n                    handleChange(e);\n                    setFormFields({\n                      ...formFields,\n                      username: e.target.value\n                    });\n                  }\n                  // onChange={handleChange}\n                  ,\n                  value: values.username,\n                  name: \"username\",\n                  placeholder: \"Username\",\n                  required: true,\n                  isInvalid: !!errors.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: \"4\",\n                controlId: \"validationFormik02\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"label\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  \"aria-label\": \"Default\",\n                  \"aria-describedby\": \"inputGroup-sizing-default\",\n                  type: \"password\",\n                  onChange: e => {\n                    handleChange(e);\n                    setFormFields({\n                      ...formFields,\n                      password: e.target.value\n                    });\n                  }\n                  // onChange={handleChange} \n                  ,\n                  value: values.password,\n                  name: \"password\",\n                  placeholder: \"Password\",\n                  isInvalid: !!errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: \"4\",\n                controlId: \"validationFormik03\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"label\",\n                  children: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  \"aria-label\": \"Default\",\n                  \"aria-describedby\": \"inputGroup-sizing-default\",\n                  type: \"password\",\n                  onChange: e => {\n                    handleChange(e);\n                    setFormFields({\n                      ...formFields,\n                      confirmPassword: e.target.value\n                    });\n                  }\n                  // onChange={handleChange} \n                  ,\n                  value: values.confirmPassword,\n                  name: \"confirmPassword\",\n                  placeholder: \"confirmPassword\",\n                  isInvalid: !!errors.confirmPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.confirmPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: \"6\",\n                controlId: \"validationFormik04\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"label\",\n                  children: \"Full name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  \"aria-label\": \"Default\",\n                  \"aria-describedby\": \"inputGroup-sizing-default\",\n                  type: \"text\",\n                  onChange: e => {\n                    handleChange(e);\n                    setFormFields({\n                      ...formFields,\n                      fullName: e.target.value\n                    });\n                  }\n                  // onChange={handleChange} \n                  ,\n                  value: values.fullName,\n                  name: \"fullName\",\n                  placeholder: \"Full name\",\n                  required: true,\n                  isInvalid: !!errors.fullName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: \"Please enter a valid full name.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: \"6\",\n                controlId: \"validationFormik05\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"label\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  \"aria-label\": \"Default\",\n                  \"aria-describedby\": \"inputGroup-sizing-default\",\n                  type: \"text\",\n                  onChange: e => {\n                    handleChange(e);\n                    setFormFields({\n                      ...formFields,\n                      email: e.target.value\n                    });\n                  }\n                  // onChange={handleChange} \n                  ,\n                  value: values.email,\n                  name: \"email\",\n                  placeholder: \"Email\",\n                  required: true,\n                  isInvalid: !!errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: \"Please enter a valid email.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: \"6\",\n                controlId: \"validationFormik06\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"label\",\n                  children: \"Zip Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  \"aria-label\": \"Default\",\n                  \"aria-describedby\": \"inputGroup-sizing-default\",\n                  type: \"number\",\n                  onChange: e => {\n                    handleChange(e);\n                    setFormFields({\n                      ...formFields,\n                      zipCode: e.target.value\n                    });\n                  }\n                  // onChange={handleChange} \n                  ,\n                  value: values.zipCode,\n                  name: \"zipCode\",\n                  placeholder: \"Zip Code\",\n                  required: true,\n                  isInvalid: !!errors.zipCode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: \"Please enter a valid zip code.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: \"6\",\n                controlId: \"validationFormik07\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"label\",\n                  children: \"Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  onChange: e => {\n                    handleChange(e);\n                    setFormFields({\n                      ...formFields,\n                      address: e.target.value\n                    });\n                  }\n                  // onChange={handleChange} \n                  ,\n                  value: values.address,\n                  name: \"address\",\n                  placeholder: \"Address\",\n                  required: true,\n                  isInvalid: !!errors.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: \"Please enter a valid address.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: \"2\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"label\",\n                  children: \"Assign Role\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  name: \"role\",\n                  type: \"text\",\n                  placeholder: \"User\",\n                  \"aria-label\": \"Disabled input example\",\n                  readOnly: true,\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  md: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"label\",\n                  children: \"Choose your preferences\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"warning\",\n                  onClick: handleShow,\n                  className: \"pref-btn\",\n                  children: \"Choose your preferences\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              show: show,\n              onHide: handleClose,\n              animation: false,\n              children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n                closeButton: true,\n                children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                  children: \"My Preferences\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n                children: /*#__PURE__*/_jsxDEV(Form /*onSubmit={handleSearch}*/, {\n                  children: [numberOfResults === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"No preferences found\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Select your preferences: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 21\n                  }, this), preferences.map(preference => /*#__PURE__*/_jsxDEV(Form.Check, {\n                    // Agrego un id unico\n                    type: \"switch\",\n                    id: `custom-switch-${preference.typeId}` // Hago uso del unique id\n                    ,\n                    label: preference.categoryName\n                    // le voy asignando el nombre para ir guardandolo en la base de datos\n                    ,\n                    name: preference.typeId,\n                    value: preferencesArray,\n                    onChange: handleCheck\n                  }, `preference-${preference.typeId}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 21\n                  }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Select your restrictions: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 21\n                  }, this), restrictions.map(restriction => /*#__PURE__*/_jsxDEV(Form.Check, {\n                    // Agrego un id unico\n                    type: \"switch\",\n                    id: `custom-switch-${restriction.typeId}` // Hago uso del unique id\n                    ,\n                    label: restriction.categoryName\n                    // le voy asignando el nombre para ir guardandolo en la base de datos\n                    ,\n                    name: restriction.typeId,\n                    value: preferencesArray,\n                    onChange: handleCheck\n                  }, `preference-${restriction.typeId}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 21\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"secondary\",\n                  onClick: handleClose,\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  onClick: handleSave,\n                  children: \"Save My Preferences\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              type: \"submit\",\n              children: \"Submit form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"37l4fiwAPLVHwDBeV6V7mlwlrSI=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useContext","useEffect","Layout","UserContext","registerUser","useNavigate","Form","InputGroup","Col","Row","getPreferencesList","savePreferences","Button","Modal","formik","yup","jsxDEV","_jsxDEV","initialValues","username","password","confirmPassword","fullName","email","zipCode","address","role","preferencesArray","validationSchema","object","shape","string","required","oneOf","ref","Register","_ref","_s","children","navigate","formFields","setFormFields","setCurrentUser","preferences","setPreferences","restrictions","setRestrictions","numberOfResults","setNumberOfRecords","checkedPreference","setCheckedPreference","checkedRestriction","setCheckedRestriction","show","setShow","handleClose","handleShow","Formik","fetchData","data","length","rArray","pArray","i","typeId","push","error","console","log","handleSubmit","event","alert","userRegister","registeredInUser","user","isAuthenticated","localStorage","setItem","JSON","stringify","token","handleCheck","name","value","checked","target","parseInt","filter","prevPref","prevRestr","handleSave","e","userPreferences","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_ref2","handleChange","values","touched","errors","noValidate","Group","as","md","controlId","Label","Control","type","onChange","placeholder","isInvalid","Feedback","readOnly","disabled","variant","onClick","onHide","animation","Header","closeButton","Title","Body","map","preference","Check","id","label","categoryName","restriction","Footer","_c","$RefreshReg$"],"sources":["C:/Users/stude/workspace/team-6-mate/final/react/src/pages/Register/Register.js"],"sourcesContent":["import { useState,useContext, useEffect } from 'react';\r\nimport Layout from \"../../components/ui/Layout\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport { registerUser } from '../../api/UserApi';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { getPreferencesList } from '../../api/PreferenceApi';\r\nimport { savePreferences } from '../../api/PreferenceApi';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport * as formik from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport './Register.css';\r\n\r\n// defino los valores iniciales\r\nconst initialValues = {\r\n  username: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n  fullName: '',\r\n  email: '',\r\n  zipCode: '',\r\n  address: '',\r\n  role: 'User',\r\n  preferencesArray: [],\r\n};\r\n\r\n// defino las validaciones de yup schema\r\nconst validationSchema = yup.object().shape({\r\n  username: yup.string().required('Username is required'),\r\n  password: yup.string().required('Password is required'),\r\n  confirmPassword: yup.string()\r\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\r\n    .required('Confirm Password is required'),\r\n  fullName: yup.string().required('Full Name is required'),\r\n  email: yup.string().email('Invalid email').required('Email is required'),\r\n  zipCode: yup.string().required('Zip Code is required'),\r\n  address: yup.string().required('Address is required'),\r\n});\r\n\r\nconst Register = ({ children }) => {\r\n    const navigate = useNavigate();    \r\n    const [formFields, setFormFields] = useState(initialValues);\r\n    const { username, password, confirmPassword, fullName, email, zipCode, address, role, preferencesArray } = formFields;\r\n    const { setCurrentUser } = useContext(UserContext);\r\n\r\n    const [preferences, setPreferences] = useState([]);\r\n    const [restrictions, setRestrictions] = useState([]);\r\n    const [numberOfResults, setNumberOfRecords] = useState(0);\r\n\r\n    const[checkedPreference, setCheckedPreference] = useState([]);\r\n    const[checkedRestriction, setCheckedRestriction] = useState([]);\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const { Formik } = formik;\r\n\r\n\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n          try {\r\n              const data = await getPreferencesList(); // Assuming getPreferencesList is an async function that returns your data\r\n\r\n              \r\n              if (data.length > 0) {\r\n                  let rArray = [];\r\n                  let pArray = [];\r\n                  for(var i =0; i < data.length; i++) {\r\n                      if(data[i].typeId >= 0 && data[i].typeId < 4) {\r\n                          rArray.push(data[i]); \r\n                      } else if (data[i].typeId > 3) {\r\n                          pArray.push(data[i]);\r\n                      }\r\n                  }\r\n                  setRestrictions(rArray);\r\n                  setPreferences(pArray);\r\n                  setNumberOfRecords(data.length);\r\n              }\r\n          } catch (error) {\r\n              console.error(\"Error fetching preferences:\", error);\r\n          }\r\n      }; \r\n      fetchData();\r\n  }, []); // Corre el useEffect una sola vez cuanto se monta el componente\r\n\r\n  // estoy chequeando que queden todos mis datos seleccionados en el nuevo array\r\n  // de manera inmediata y sin retraso como lo hace el console.log\r\n  useEffect(() => {\r\n    console.log(\"Updated preferencesArray:\", formFields.preferencesArray);\r\n  }, [formFields.preferencesArray]);\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        // event.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            alert(\"password do not match\");\r\n            return;\r\n        } \r\n        if (checkedPreference.length === 0 && checkedRestriction.length === 0) {\r\n          alert(\"please select your preferences\");\r\n          return;\r\n        } try {\r\n            const userRegister = { ...formFields, role: \"User\" }; \r\n            const registeredInUser = await registerUser(userRegister);\r\n            \r\n            if (registeredInUser) {                  \r\n                registeredInUser.user.isAuthenticated = true;\r\n                localStorage.setItem('user', JSON.stringify(registeredInUser.user));\r\n                localStorage.setItem('token', registeredInUser.token);        \r\n                setCurrentUser(registeredInUser.user);\r\n                await savePreferences(formFields.preferencesArray);\r\n                navigate(\"/Recomendation\");\r\n                }\r\n            \r\n        } catch(error) {\r\n            console.log('user created encounter an error', error);\r\n        } \r\n\r\n    }\r\n\r\n    //  Este handlecheck se utiliza solo para las preferencias y restricciones\r\n    const handleCheck = (event) => {\r\n      const { name, value, checked } = event.target;\r\n      setFormFields({...formFields,[name]:value});\r\n\r\n      if(checked) {\r\n        if (parseInt(name) > 3) {\r\n        setCheckedPreference([...checkedPreference, name]);\r\n        console.log(\"check preference: \" + name)\r\n        } else if(parseInt(name) >= 0 && parseInt(name) <= 3) {\r\n          setCheckedRestriction([...checkedRestriction, name]);\r\n          console.log(\"check restriction: \" + name)\r\n        } \r\n      } else {\r\n        if (parseInt(name) > 3) {\r\n        setCheckedPreference([preferences.filter(prevPref => prevPref !== name)]);\r\n        console.log(\"unchecked preference: \" + name);\r\n        }  else if (parseInt(name) >= 0 && parseInt(name) <= 3) {\r\n          setCheckedRestriction([restrictions.filter(prevRestr => prevRestr !== name)]);\r\n          console.log(\"unchecked restriction: \" + name)\r\n        }\r\n      }\r\n  }\r\n\r\n    // Es para guardar las preferencias y restricciones\r\n    const handleSave = (e) => {\r\n      let userPreferences = [];\r\n      if(checkedPreference.length === 0 && checkedRestriction.length === 0) {\r\n        alert(\"Please choose at least one preference\");\r\n      } else {\r\n        if(checkedPreference.length !== 0) {\r\n          // // Uso los puntos suspensivos para agregar las preferencias seleccionadas individualmente\r\n          userPreferences.push(...checkedPreference);\r\n        } \r\n        if(checkedRestriction.length !== 0) {\r\n          userPreferences.push(...checkedRestriction);\r\n        }\r\n          // seteo las preferencias seleccionadas en el formFields state\r\n          setFormFields({ ...formFields, preferencesArray: userPreferences });\r\n\r\n          // Cierro el modal una vez guardado\r\n          handleClose();\r\n        }\r\n        console.log(\"Updated preferencesArray:\", formFields.preferencesArray);\r\n        \r\n      \r\n    }\r\n\r\n    \r\n    return (\r\n        <Layout>\r\n          <div className='container'>\r\n            <h3>Register</h3>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={handleSubmit}\r\n              >\r\n            {({ handleSubmit,handleChange, values, touched, errors  }) => (\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n\r\n              {/*  primeros 3 fields*/}\r\n\r\n              <Row className=\"mb-3\">\r\n                <Form.Group as={Col} md=\"4\" controlId=\"validationFormik01\">\r\n                <Form.Label className='label'>Username</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\" \r\n                    // como estoy usando formik, tuve que setear formfields individualmente\r\n                    // para no mezclar los handlechange\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                      setFormFields({ ...formFields, username: e.target.value });\r\n                    }}\r\n                    // onChange={handleChange}\r\n                    value={values.username} \r\n                    name=\"username\"\r\n                    placeholder=\"Username\" \r\n                    required\r\n                    isInvalid={!!errors.username}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.username}\r\n                  </Form.Control.Feedback>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\">\r\n                <Form.Label className='label'>Password</Form.Label>\r\n                  <Form.Control\r\n                    aria-label=\"Default\"\r\n                    aria-describedby=\"inputGroup-sizing-default\"\r\n                    type=\"password\" \r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                      setFormFields({ ...formFields, password: e.target.value });\r\n                    }}\r\n                    // onChange={handleChange} \r\n                    value={values.password} \r\n                    name=\"password\" \r\n                    placeholder=\"Password\"\r\n                    isInvalid={!!errors.password}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.password}\r\n                </Form.Control.Feedback>\r\n                </Form.Group>\r\n                  \r\n\r\n                <Form.Group as={Col} md=\"4\" controlId=\"validationFormik03\">\r\n                <Form.Label className='label'>Confirm Password</Form.Label>\r\n                  <Form.Control\r\n                    aria-label=\"Default\"\r\n                    aria-describedby=\"inputGroup-sizing-default\"\r\n                    type=\"password\" \r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                      setFormFields({ ...formFields, confirmPassword: e.target.value });\r\n                    }}\r\n                    // onChange={handleChange} \r\n                    value={values.confirmPassword} \r\n                    name=\"confirmPassword\" \r\n                    placeholder=\"confirmPassword\"\r\n                    isInvalid={!!errors.confirmPassword}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.confirmPassword}\r\n                </Form.Control.Feedback>\r\n                </Form.Group>\r\n                </Row>\r\n\r\n                \r\n                  {/*  segundos 3 fields*/}\r\n\r\n                <Row className=\"mb-3\">  \r\n                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik04\">\r\n                <Form.Label className='label'>Full name</Form.Label>\r\n                  <Form.Control\r\n                    aria-label=\"Default\"\r\n                    aria-describedby=\"inputGroup-sizing-default\"\r\n                    type=\"text\" \r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                      setFormFields({ ...formFields, fullName: e.target.value });\r\n                    }}\r\n                    // onChange={handleChange} \r\n                    value={values.fullName} \r\n                    name=\"fullName\" \r\n                    placeholder=\"Full name\" \r\n                    required\r\n                    isInvalid={!!errors.fullName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                  Please enter a valid full name.\r\n                </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik05\">\r\n                <Form.Label className='label'>Email</Form.Label>\r\n                  <Form.Control\r\n                    aria-label=\"Default\"\r\n                    aria-describedby=\"inputGroup-sizing-default\"\r\n                    type=\"text\" \r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                      setFormFields({ ...formFields, email: e.target.value });\r\n                    }}\r\n                    // onChange={handleChange} \r\n                    value={values.email} \r\n                    name=\"email\" \r\n                    placeholder=\"Email\" \r\n                    required\r\n                    isInvalid={!!errors.email}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please enter a valid email.\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                </Row>\r\n\r\n                <Row className=\"mb-3\">  \r\n                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik06\">\r\n                <Form.Label className='label'>Zip Code</Form.Label>\r\n                  <Form.Control\r\n                    aria-label=\"Default\"\r\n                    aria-describedby=\"inputGroup-sizing-default\"\r\n                    type=\"number\" \r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                      setFormFields({ ...formFields, zipCode: e.target.value });\r\n                    }}\r\n                    // onChange={handleChange} \r\n                    value={values.zipCode} \r\n                    name=\"zipCode\" \r\n                    placeholder=\"Zip Code\" \r\n                    required\r\n                    isInvalid={!!errors.zipCode}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please enter a valid zip code.\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik07\">\r\n                <Form.Label className='label'>Address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\" \r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                      setFormFields({ ...formFields, address: e.target.value });\r\n                    }}\r\n                    // onChange={handleChange} \r\n                    value={values.address}  \r\n                    name=\"address\" \r\n                    placeholder=\"Address\" \r\n                    required\r\n                    isInvalid={!!errors.address}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please enter a valid address.\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                </Row>\r\n                \r\n                  <Row className=\"mb-3\">  \r\n                    <Form.Group as={Col} md=\"2\">\r\n                        <Form.Label className='label'>Assign Role</Form.Label>\r\n                          <Form.Control\r\n                            name=\"role\"\r\n                            type=\"text\"\r\n                            placeholder=\"User\"\r\n                            aria-label=\"Disabled input example\"\r\n                            readOnly\r\n                            disabled \r\n                          />\r\n                          <Form.Group as={Col} md=\"2\"></Form.Group>\r\n                          <Form.Label className='label'>Choose your preferences</Form.Label>\r\n                          <Button variant=\"warning\" onClick={handleShow} className='pref-btn'>\r\n                          Choose your preferences\r\n                        </Button>\r\n                    </Form.Group>\r\n                    \r\n                  </Row>\r\n\r\n      <Modal show={show} onHide={handleClose} animation={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>My Preferences</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n                <Form /*onSubmit={handleSearch}*/>\r\n                {(numberOfResults === 0) &&\r\n                    <div>No preferences found</div>\r\n                }\r\n                {/*CAMBIAR PREFERENCE POR TIPO DE COMIDA U OTRO*/}\r\n                    <p>Select your preferences: </p>\r\n                    {preferences.map(preference => (\r\n                    <Form.Check // prettier-ignore\r\n                        key={`preference-${preference.typeId}`} // Agrego un id unico\r\n                        type=\"switch\"\r\n                        id={`custom-switch-${preference.typeId}`} // Hago uso del unique id\r\n                        label={preference.categoryName}\r\n                        // le voy asignando el nombre para ir guardandolo en la base de datos\r\n                        name={preference.typeId}\r\n                        value={preferencesArray}\r\n                        onChange={handleCheck}\r\n                    />\r\n                    ))}\r\n                    <p>Select your restrictions: </p>\r\n                    {restrictions.map(restriction => (\r\n                    <Form.Check // prettier-ignore\r\n                    key={`preference-${restriction.typeId}`} // Agrego un id unico\r\n                        type=\"switch\"\r\n                        id={`custom-switch-${restriction.typeId}`} // Hago uso del unique id\r\n                        label={restriction.categoryName}\r\n                        // le voy asignando el nombre para ir guardandolo en la base de datos\r\n                        name={restriction.typeId}\r\n                        value={preferencesArray}\r\n                        onChange={handleCheck}\r\n                    />\r\n                    ))}\r\n                  \r\n                </Form></Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleSave}>\r\n            Save My Preferences\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n\r\n  <button className=\"btn btn-danger\" type=\"submit\">Submit form</button>\r\n</Form>\r\n\r\n            )}\r\n        </Formik>\r\n        </div>\r\n          {children}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}