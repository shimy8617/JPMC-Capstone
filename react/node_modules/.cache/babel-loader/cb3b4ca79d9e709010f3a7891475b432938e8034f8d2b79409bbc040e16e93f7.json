{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nfunction getDefaultSorting(defaultTableData, columns) {\n  const sorted = [...defaultTableData].sort((a, b) => {\n    const filterColumn = columns.filter(column => column.sortbyOrder);\n\n    // Merge all array objects into single object and extract accessor and sortbyOrder keys\n    let {\n      accessor = \"id\",\n      sortbyOrder = \"asc\"\n    } = Object.assign({}, ...filterColumn);\n    if (a[accessor] === null) return 1;\n    if (b[accessor] === null) return -1;\n    if (a[accessor] === null && b[accessor] === null) return 0;\n    const ascending = a[accessor].toString().localeCompare(b[accessor].toString(), \"en\", {\n      numeric: true\n    });\n    return sortbyOrder === \"asc\" ? ascending : -ascending;\n  });\n  return sorted;\n}\nexport const useSortableTable = (data, columns) => {\n  _s();\n  //const [tableData, setTableData] = useState(getDefaultSorting(data, columns));\n  const [tableData, setTableData] = useState(data);\n  useEffect(() => {\n    setTableData(data);\n  }, [data]);\n  const handleSorting = (sortField, sortOrder) => {\n    if (sortField) {\n      const sorted = [...tableData].sort((a, b) => {\n        if (a[sortField] === null) return 1;\n        if (b[sortField] === null) return -1;\n        if (a[sortField] === null && b[sortField] === null) return 0;\n        return a[sortField].toString().localeCompare(b[sortField].toString(), \"en\", {\n          numeric: true\n        }) * (sortOrder === \"asc\" ? 1 : -1);\n      });\n      setTableData(sorted);\n    }\n  };\n  return [tableData, handleSorting];\n};\n_s(useSortableTable, \"RIR2iuso2F3/eYRP55oSu8vqh8w=\");","map":{"version":3,"names":["useState","useEffect","getDefaultSorting","defaultTableData","columns","sorted","sort","a","b","filterColumn","filter","column","sortbyOrder","accessor","Object","assign","ascending","toString","localeCompare","numeric","useSortableTable","data","_s","tableData","setTableData","handleSorting","sortField","sortOrder"],"sources":["C:/Users/stude/workspace/team-6-mate/final/react/src/components/ui/table/useSortableTable.js"],"sourcesContent":["import { useState,useEffect } from \"react\";\r\n\r\n\r\nfunction getDefaultSorting(defaultTableData, columns) {\r\n    const sorted = [...defaultTableData].sort((a, b) => {\r\n      const filterColumn = columns.filter((column) => column.sortbyOrder);\r\n  \r\n      // Merge all array objects into single object and extract accessor and sortbyOrder keys\r\n      let { accessor = \"id\", sortbyOrder = \"asc\" } = Object.assign(\r\n        {},\r\n        ...filterColumn\r\n      );\r\n  \r\n      if (a[accessor] === null) return 1;\r\n      if (b[accessor] === null) return -1;\r\n      if (a[accessor] === null && b[accessor] === null) return 0;\r\n  \r\n      const ascending = a[accessor]\r\n        .toString()\r\n        .localeCompare(b[accessor].toString(), \"en\", {\r\n          numeric: true,\r\n        });\r\n  \r\n      return sortbyOrder === \"asc\" ? ascending : -ascending;\r\n    });\r\n    return sorted;\r\n  }\r\n  \r\n  export const useSortableTable = (data, columns) => {\r\n    //const [tableData, setTableData] = useState(getDefaultSorting(data, columns));\r\n    const [tableData, setTableData] = useState(data);\r\n    useEffect(() => {\r\n      setTableData(data);\r\n    }, [data]);\r\n\r\n    const handleSorting = (sortField, sortOrder) => {\r\n      if (sortField) {\r\n        const sorted = [...tableData].sort((a, b) => {\r\n          if (a[sortField] === null) return 1;\r\n          if (b[sortField] === null) return -1;\r\n          if (a[sortField] === null && b[sortField] === null) return 0;\r\n          return (\r\n            a[sortField].toString().localeCompare(b[sortField].toString(), \"en\", {\r\n              numeric: true,\r\n            }) * (sortOrder === \"asc\" ? 1 : -1)\r\n          );\r\n        });\r\n        setTableData(sorted);\r\n      }\r\n    };\r\n  \r\n    return [tableData, handleSorting];\r\n  };"],"mappings":";AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAG1C,SAASC,iBAAiBA,CAACC,gBAAgB,EAAEC,OAAO,EAAE;EAClD,MAAMC,MAAM,GAAG,CAAC,GAAGF,gBAAgB,CAAC,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IAClD,MAAMC,YAAY,GAAGL,OAAO,CAACM,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,WAAW,CAAC;;IAEnE;IACA,IAAI;MAAEC,QAAQ,GAAG,IAAI;MAAED,WAAW,GAAG;IAAM,CAAC,GAAGE,MAAM,CAACC,MAAM,CAC1D,CAAC,CAAC,EACF,GAAGN,YAAY,CAChB;IAED,IAAIF,CAAC,CAACM,QAAQ,CAAC,KAAK,IAAI,EAAE,OAAO,CAAC;IAClC,IAAIL,CAAC,CAACK,QAAQ,CAAC,KAAK,IAAI,EAAE,OAAO,CAAC,CAAC;IACnC,IAAIN,CAAC,CAACM,QAAQ,CAAC,KAAK,IAAI,IAAIL,CAAC,CAACK,QAAQ,CAAC,KAAK,IAAI,EAAE,OAAO,CAAC;IAE1D,MAAMG,SAAS,GAAGT,CAAC,CAACM,QAAQ,CAAC,CAC1BI,QAAQ,EAAE,CACVC,aAAa,CAACV,CAAC,CAACK,QAAQ,CAAC,CAACI,QAAQ,EAAE,EAAE,IAAI,EAAE;MAC3CE,OAAO,EAAE;IACX,CAAC,CAAC;IAEJ,OAAOP,WAAW,KAAK,KAAK,GAAGI,SAAS,GAAG,CAACA,SAAS;EACvD,CAAC,CAAC;EACF,OAAOX,MAAM;AACf;AAEA,OAAO,MAAMe,gBAAgB,GAAGA,CAACC,IAAI,EAAEjB,OAAO,KAAK;EAAAkB,EAAA;EACjD;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAACqB,IAAI,CAAC;EAChDpB,SAAS,CAAC,MAAM;IACduB,YAAY,CAACH,IAAI,CAAC;EACpB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMI,aAAa,GAAGA,CAACC,SAAS,EAAEC,SAAS,KAAK;IAC9C,IAAID,SAAS,EAAE;MACb,MAAMrB,MAAM,GAAG,CAAC,GAAGkB,SAAS,CAAC,CAACjB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC3C,IAAID,CAAC,CAACmB,SAAS,CAAC,KAAK,IAAI,EAAE,OAAO,CAAC;QACnC,IAAIlB,CAAC,CAACkB,SAAS,CAAC,KAAK,IAAI,EAAE,OAAO,CAAC,CAAC;QACpC,IAAInB,CAAC,CAACmB,SAAS,CAAC,KAAK,IAAI,IAAIlB,CAAC,CAACkB,SAAS,CAAC,KAAK,IAAI,EAAE,OAAO,CAAC;QAC5D,OACEnB,CAAC,CAACmB,SAAS,CAAC,CAACT,QAAQ,EAAE,CAACC,aAAa,CAACV,CAAC,CAACkB,SAAS,CAAC,CAACT,QAAQ,EAAE,EAAE,IAAI,EAAE;UACnEE,OAAO,EAAE;QACX,CAAC,CAAC,IAAIQ,SAAS,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;MAEvC,CAAC,CAAC;MACFH,YAAY,CAACnB,MAAM,CAAC;IACtB;EACF,CAAC;EAED,OAAO,CAACkB,SAAS,EAAEE,aAAa,CAAC;AACnC,CAAC;AAACH,EAAA,CAxBWF,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}