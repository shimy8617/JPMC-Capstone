{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stude\\\\workspace\\\\team-6-mate\\\\final\\\\react\\\\src\\\\pages\\\\Preferences\\\\Preferences.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Layout from \"../../components/ui/Layout\";\nimport Form from 'react-bootstrap/Form';\nimport { Button, ButtonGroup } from 'react-bootstrap';\nimport { preferencesUser } from \"../../api/PreferenceApi\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getPreferencesList } from \"../../api/PreferenceApi\";\n//import { getUserPreferences} from \"../../api/PreferenceApi\";\n\nimport './Preferences.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Preferences = () => {\n  _s();\n  const userContext = useContext(UserContext);\n  const {\n    setCurrentUser\n  } = userContext.setCurrentUser;\n  const user = userContext.currentUser;\n  const navigate = useNavigate();\n  const [preferences, setPreferences] = useState([]);\n  const [restrictions, setRestrictions] = useState([]);\n  const [numberOfResults, setNumberOfResults] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getPreferencesList();\n        if (data.length > 0) {\n          const rArray = data.filter(item => item.typeId >= 0 && item.typeId < 4);\n          const pArray = data.filter(item => item.typeId > 3);\n          setRestrictions(rArray);\n          setPreferences(pArray);\n          setNumberOfResults(data.length);\n        }\n      } catch (error) {\n        console.error(\"Error fetching preferences:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleChange = (itemId, isPreference) => {\n    const updatedList = isPreference ? preferences : restrictions;\n    const updatedItemIndex = updatedList.findIndex(item => item.typeId === itemId);\n    if (updatedItemIndex !== -1) {\n      const updatedItem = {\n        ...updatedList[updatedItemIndex]\n      };\n      updatedItem.checked = !updatedItem.checked;\n      updatedList[updatedItemIndex] = updatedItem;\n      if (isPreference) {\n        setPreferences([...updatedList]);\n      } else {\n        setRestrictions([...updatedList]);\n      }\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const userRegister = {\n        preferences: preferences.filter(preference => preference.checked),\n        restrictions: restrictions.filter(restriction => restriction.checked)\n      };\n      const preferenceUser = await preferencesUser(userRegister);\n      if (preferenceUser) {\n        preferenceUser.user.isAuthenticated = true;\n        localStorage.setItem('typeId', JSON.stringify(preferenceUser.user));\n        setCurrentUser(preferenceUser.user);\n        navigate(\"/Recomendation\");\n      }\n      console.log(\"Updated preferences:\", userRegister);\n    } catch (error) {\n      console.error('Error updating preferences:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"My Preferences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form /*onSubmit={handleSearch}*/, {\n            children: [numberOfResults === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"No preferences found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Select your preferences: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this), preferences.map(preference => /*#__PURE__*/_jsxDEV(Form.Check, {\n              // Agrego un id unico\n              type: \"switch\",\n              id: `custom-switch-${preference.typeId}` // Hago uso del unique id\n              ,\n              label: preference.categoryName\n              // le voy asignando el nombre para ir guardandolo en la base de datos\n              ,\n              name: preference.typeId\n              //value={typeOfFood}\n              ,\n              onChange: () => handleChange(preference.typeId, true),\n              checked: preference.checked\n            }, preference.typeId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Select your restrictions: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this), restrictions.map(restriction => /*#__PURE__*/_jsxDEV(Form.Check, {\n              // Agrego un id unico\n              type: \"switch\",\n              id: `custom-switch-${restriction.typeId}` // Hago uso del unique id\n              ,\n              label: restriction.categoryName\n              // le voy asignando el nombre para ir guardandolo en la base de datos\n              ,\n              name: restriction.typeId\n              // value={typeOfFood}\n              ,\n              onChange: () => handleChange(restriction.typeId, false),\n              checked: restriction.checked\n            }, restriction.typeId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                onSubmit: handleSubmit,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Preferences, \"MgxqxJ/tbDpfpO75pHAnySFTDVU=\", false, function () {\n  return [useNavigate];\n});\n_c = Preferences;\nexport default Preferences;\nvar _c;\n$RefreshReg$(_c, \"Preferences\");","map":{"version":3,"names":["React","useState","useContext","useEffect","Layout","Form","Button","ButtonGroup","preferencesUser","UserContext","useNavigate","getPreferencesList","jsxDEV","_jsxDEV","Fragment","_Fragment","Preferences","_s","userContext","setCurrentUser","user","currentUser","navigate","preferences","setPreferences","restrictions","setRestrictions","numberOfResults","setNumberOfResults","fetchData","data","length","rArray","filter","item","typeId","pArray","error","console","handleChange","itemId","isPreference","updatedList","updatedItemIndex","findIndex","updatedItem","checked","handleSubmit","event","preventDefault","userRegister","preference","restriction","preferenceUser","isAuthenticated","localStorage","setItem","JSON","stringify","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","Check","type","id","label","categoryName","name","onChange","variant","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/stude/workspace/team-6-mate/final/react/src/pages/Preferences/Preferences.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport Layout from \"../../components/ui/Layout\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\nimport { preferencesUser } from \"../../api/PreferenceApi\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getPreferencesList } from \"../../api/PreferenceApi\";\r\n//import { getUserPreferences} from \"../../api/PreferenceApi\";\r\n\r\nimport './Preferences.css';\r\n\r\nconst Preferences = () => {\r\n    \r\n    const userContext =  useContext(UserContext);\r\n    const { setCurrentUser } = userContext.setCurrentUser;\r\n    const user = userContext.currentUser;\r\n    const navigate = useNavigate();    \r\n\r\n    const [preferences, setPreferences] = useState([]);\r\n    const [restrictions, setRestrictions] = useState([]);\r\n    const [numberOfResults, setNumberOfResults] = useState(0);\r\n\r\n    \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n          try {\r\n            const data = await getPreferencesList();\r\n    \r\n            if (data.length > 0) {\r\n              const rArray = data.filter(item => item.typeId >= 0 && item.typeId < 4);\r\n              const pArray = data.filter(item => item.typeId > 3);\r\n    \r\n              setRestrictions(rArray);\r\n              setPreferences(pArray);\r\n              setNumberOfResults(data.length);\r\n            }\r\n          } catch (error) {\r\n            console.error(\"Error fetching preferences:\", error);\r\n          }\r\n        };\r\n    \r\n        fetchData();\r\n      }, []);\r\n\r\n    \r\n    const handleChange = (itemId, isPreference) => {\r\n        const updatedList = isPreference ? preferences : restrictions;\r\n        const updatedItemIndex = updatedList.findIndex(item => item.typeId === itemId);\r\n    \r\n        if (updatedItemIndex !== -1) {\r\n          const updatedItem = { ...updatedList[updatedItemIndex] };\r\n          updatedItem.checked = !updatedItem.checked;\r\n          updatedList[updatedItemIndex] = updatedItem;\r\n    \r\n          if (isPreference) {\r\n            setPreferences([...updatedList]);\r\n          } else {\r\n            setRestrictions([...updatedList]);\r\n          }\r\n        }\r\n      };\r\n\r\n      const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n    \r\n        try {\r\n          const userRegister = {\r\n            preferences: preferences.filter(preference => preference.checked),\r\n            restrictions: restrictions.filter(restriction => restriction.checked)\r\n          };\r\n    \r\n          const preferenceUser = await preferencesUser(userRegister);\r\n    \r\n          if (preferenceUser) {\r\n            preferenceUser.user.isAuthenticated = true;\r\n            localStorage.setItem('typeId', JSON.stringify(preferenceUser.user));\r\n    \r\n            setCurrentUser(preferenceUser.user);\r\n            navigate(\"/Recomendation\");\r\n          }\r\n    \r\n          console.log(\"Updated preferences:\", userRegister);\r\n        } catch (error) {\r\n          console.error('Error updating preferences:', error);\r\n        }\r\n      };\r\n  \r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <div className=\"container\">\r\n                <div className=\"form-container\">\r\n                <h2>My Preferences</h2>\r\n                <Form /*onSubmit={handleSearch}*/>\r\n                {(numberOfResults === 0) &&\r\n                    <div>No preferences found</div>\r\n                }\r\n                    <h4>Select your preferences: </h4>\r\n                    {preferences.map(preference => (\r\n                    <Form.Check // prettier-ignore\r\n                        key={preference.typeId} // Agrego un id unico\r\n                        type=\"switch\"\r\n                        id={`custom-switch-${preference.typeId}`} // Hago uso del unique id\r\n                        label={preference.categoryName}\r\n                        // le voy asignando el nombre para ir guardandolo en la base de datos\r\n                        name={preference.typeId}\r\n                        //value={typeOfFood}\r\n                        onChange={() => handleChange(preference.typeId, true)}\r\n                  checked={preference.checked}\r\n                    />\r\n                    ))}\r\n                    <h4>Select your restrictions: </h4>\r\n                    {restrictions.map(restriction => (\r\n                    <Form.Check // prettier-ignore\r\n                        key={restriction.typeId} // Agrego un id unico\r\n                        type=\"switch\"\r\n                        id={`custom-switch-${restriction.typeId}`} // Hago uso del unique id\r\n                        label={restriction.categoryName}\r\n                        // le voy asignando el nombre para ir guardandolo en la base de datos\r\n                        name={restriction.typeId}\r\n                        // value={typeOfFood}\r\n                        onChange={() => handleChange(restriction.typeId, false)}\r\n                        checked={restriction.checked}\r\n                    />\r\n                    ))}\r\n                    <ButtonGroup>\r\n                        <Button variant=\"primary\" type=\"submit\" onSubmit={handleSubmit}>\r\n                            Submit\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                </Form>\r\n                </div>\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\nexport default Preferences;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}