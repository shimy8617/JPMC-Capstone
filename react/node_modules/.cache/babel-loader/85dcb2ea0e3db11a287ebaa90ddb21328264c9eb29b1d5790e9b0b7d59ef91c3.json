{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stude\\\\workspace\\\\team-6-mate\\\\final\\\\react\\\\src\\\\pages\\\\Register\\\\Register.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext, useEffect } from 'react';\nimport Layout from \"../../components/ui/Layout\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { registerUser } from '../../api/UserApi';\nimport { useNavigate } from \"react-router-dom\";\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { getPreferencesList } from '../../api/PreferenceApi';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport * as formik from 'formik';\nimport * as yup from 'yup';\nimport './Register.css';\n\n// defino los valores iniciales\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  username: '',\n  password: '',\n  confirmPassword: '',\n  fullName: '',\n  email: '',\n  zipCode: '',\n  address: '',\n  role: 'User',\n  preferencesArray: []\n};\n\n// defino las validaciones de yup schema\nconst validationSchema = yup.object().shape({\n  username: yup.string().required('Username is required'),\n  password: yup.string().required('Password is required'),\n  confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match').required('Confirm Password is required'),\n  fullName: yup.string().required('Full Name is required'),\n  email: yup.string().email('Invalid email').required('Email is required'),\n  zipCode: yup.string().required('Zip Code is required'),\n  address: yup.string().required('Address is required')\n});\nconst Register = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  const [formFields, setFormFields] = useState(initialValues);\n  const {\n    username,\n    password,\n    confirmPassword,\n    fullName,\n    email,\n    zipCode,\n    address,\n    role,\n    preferencesArray\n  } = formFields;\n  const {\n    setCurrentUser\n  } = useContext(UserContext);\n  const [preferences, setPreferences] = useState([]);\n  const [restrictions, setRestrictions] = useState([]);\n  const [numberOfResults, setNumberOfRecords] = useState(0);\n  const [checkedPreference, setCheckedPreference] = useState([]);\n  const [checkedRestriction, setCheckedRestriction] = useState([]);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const {\n    Formik\n  } = formik;\n  useEffect(() => {\n    const savedPreferences = JSON.parse(localStorage.getItem('userPreferences')) || []; // Recupero las preferencias guardadas\n\n    const savedCheckedPreferences = savedPreferences.filter(pref => parseInt(pref) > 3);\n    const savedCheckedRestrictions = savedPreferences.filter(pref => parseInt(pref) <= 3);\n\n    // Actualizo mis check con lo guardado\n    setCheckedPreference(savedCheckedPreferences);\n    setCheckedRestriction(savedCheckedRestrictions);\n    const fetchData = async () => {\n      try {\n        const data = await getPreferencesList(); // Assuming getPreferencesList is an async function that returns your data\n\n        if (data.length > 0) {\n          let rArray = [];\n          let pArray = [];\n          for (var i = 0; i < data.length; i++) {\n            if (data[i].typeId >= 0 && data[i].typeId < 4) {\n              rArray.push(data[i]);\n            } else if (data[i].typeId > 3) {\n              pArray.push(data[i]);\n            }\n          }\n          setRestrictions(rArray);\n          setPreferences(pArray);\n          setNumberOfRecords(data.length);\n        }\n      } catch (error) {\n        console.error(\"Error fetching preferences:\", error);\n      }\n    };\n    fetchData();\n  }, []); // Corre el useEffect una sola vez cuanto se monta el componente\n\n  // estoy chequeando que queden todos mis datos seleccionados en el nuevo array\n  // de manera inmediata y sin retraso como lo hace el console.log\n  useEffect(() => {\n    console.log(\"Updated preferencesArray:\", formFields.preferencesArray);\n  }, [formFields.preferencesArray]);\n  const handleSubmit = async event => {\n    // event.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"password do not match\");\n      return;\n    }\n    if (checkedPreference.length === 0 && checkedRestriction.length === 0) {\n      alert(\"please select your preferences\");\n      return;\n    }\n    try {\n      const userRegister = {\n        ...formFields,\n        role: \"User\"\n      };\n      const registeredInUser = await registerUser(userRegister);\n      if (registeredInUser) {\n        registeredInUser.user.isAuthenticated = true;\n        localStorage.setItem('user', JSON.stringify(registeredInUser.user));\n        localStorage.setItem('token', registeredInUser.token);\n        setCurrentUser(registeredInUser.user);\n        navigate(\"/Recomendation\");\n      }\n    } catch (error) {\n      console.log('user created encounter an error', error);\n    }\n  };\n\n  //  Este handlecheck se utiliza solo para las preferencias y restricciones\n  const handleCheck = event => {\n    const {\n      name,\n      value,\n      checked\n    } = event.target;\n    setFormFields({\n      ...formFields,\n      [name]: value\n    });\n    if (checked) {\n      if (parseInt(name) > 3) {\n        setCheckedPreference([...checkedPreference, name]);\n        console.log(\"check preference: \" + name);\n      } else if (parseInt(name) >= 0 && parseInt(name) <= 3) {\n        setCheckedRestriction([...checkedRestriction, name]);\n        console.log(\"check restriction: \" + name);\n      }\n    } else {\n      if (parseInt(name) > 3) {\n        setCheckedPreference([preferences.filter(prevPref => prevPref !== name)]);\n        console.log(\"unchecked preference: \" + name);\n      } else if (parseInt(name) >= 0 && parseInt(name) <= 3) {\n        setCheckedRestriction([restrictions.filter(prevRestr => prevRestr !== name)]);\n        console.log(\"unchecked restriction: \" + name);\n      }\n    }\n  };\n\n  // Es para guardar las preferencias y restricciones\n  const handleSave = e => {\n    let userPreferences = [];\n    let userRestrictions = [];\n    if (checkedPreference.length === 0 && checkedRestriction.length === 0) {\n      alert(\"Please choose at least one preference\");\n    } else {\n      if (checkedPreference.length !== 0) {\n        // // Uso los puntos suspensivos para agregar las preferencias seleccionadas individualmente\n        userPreferences.push(...checkedPreference);\n      }\n      if (checkedRestriction.length !== 0) {\n        userPreferences.push(...checkedRestriction);\n      }\n      // seteo las preferencias del user en localStorage\n      localStorage.setItem('userPreferences', JSON.stringify(userPreferences));\n      localStorage.setItem('userPreferences', JSON.stringify(userRestrictions));\n\n      // seteo las preferencias seleccionadas en el formFields state\n      setFormFields({\n        ...formFields,\n        preferencesArray: userPreferences\n      });\n\n      // Cierro el modal una vez guardado\n      handleClose();\n    }\n    console.log(\"Updated preferencesArray:\", formFields.preferencesArray);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: handleSubmit,\n      children: _ref2 => {\n        let {\n          handleSubmit,\n          handleChange,\n          values,\n          touched,\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"4\",\n              controlId: \"validationFormik01\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\"\n                // como estoy usando formik, tuve que setear formfields individualmente\n                // para no mezclar los handlechange\n                ,\n                onChange: e => {\n                  handleChange(e);\n                  setFormFields({\n                    ...formFields,\n                    username: e.target.value\n                  });\n                }\n                // onChange={handleChange}\n                ,\n                value: values.username,\n                name: \"username\",\n                placeholder: \"Username\",\n                required: true,\n                isInvalid: !!errors.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"4\",\n              controlId: \"validationFormik02\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                \"aria-label\": \"Default\",\n                \"aria-describedby\": \"inputGroup-sizing-default\",\n                type: \"password\",\n                onChange: e => {\n                  handleChange(e);\n                  setFormFields({\n                    ...formFields,\n                    password: e.target.value\n                  });\n                }\n                // onChange={handleChange} \n                ,\n                value: values.password,\n                name: \"password\",\n                placeholder: \"Password\",\n                isInvalid: !!errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"4\",\n              controlId: \"validationFormik03\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                \"aria-label\": \"Default\",\n                \"aria-describedby\": \"inputGroup-sizing-default\",\n                type: \"password\",\n                onChange: e => {\n                  handleChange(e);\n                  setFormFields({\n                    ...formFields,\n                    confirmPassword: e.target.value\n                  });\n                }\n                // onChange={handleChange} \n                ,\n                value: values.confirmPassword,\n                name: \"confirmPassword\",\n                placeholder: \"confirmPassword\",\n                isInvalid: !!errors.confirmPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.confirmPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"6\",\n              controlId: \"validationFormik04\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Full name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                \"aria-label\": \"Default\",\n                \"aria-describedby\": \"inputGroup-sizing-default\",\n                type: \"text\",\n                onChange: e => {\n                  handleChange(e);\n                  setFormFields({\n                    ...formFields,\n                    fullName: e.target.value\n                  });\n                }\n                // onChange={handleChange} \n                ,\n                value: values.fullName,\n                name: \"fullName\",\n                placeholder: \"Full name\",\n                required: true,\n                isInvalid: !!errors.fullName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please enter a valid full name.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"6\",\n              controlId: \"validationFormik05\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                \"aria-label\": \"Default\",\n                \"aria-describedby\": \"inputGroup-sizing-default\",\n                type: \"text\",\n                onChange: e => {\n                  handleChange(e);\n                  setFormFields({\n                    ...formFields,\n                    email: e.target.value\n                  });\n                }\n                // onChange={handleChange} \n                ,\n                value: values.email,\n                name: \"email\",\n                placeholder: \"Email\",\n                required: true,\n                isInvalid: !!errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please enter a valid email.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"6\",\n              controlId: \"validationFormik06\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Zip Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                \"aria-label\": \"Default\",\n                \"aria-describedby\": \"inputGroup-sizing-default\",\n                type: \"number\",\n                onChange: e => {\n                  handleChange(e);\n                  setFormFields({\n                    ...formFields,\n                    zipCode: e.target.value\n                  });\n                }\n                // onChange={handleChange} \n                ,\n                value: values.zipCode,\n                name: \"zipCode\",\n                placeholder: \"Zip Code\",\n                required: true,\n                isInvalid: !!errors.zipCode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please enter a valid zip code.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"6\",\n              controlId: \"validationFormik07\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                onChange: e => {\n                  handleChange(e);\n                  setFormFields({\n                    ...formFields,\n                    address: e.target.value\n                  });\n                }\n                // onChange={handleChange} \n                ,\n                value: values.address,\n                name: \"address\",\n                placeholder: \"Address\",\n                required: true,\n                isInvalid: !!errors.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please enter a valid address.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"2\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Assign Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"role\",\n                type: \"text\",\n                placeholder: \"User\",\n                \"aria-label\": \"Disabled input example\",\n                readOnly: true,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            onClick: handleShow,\n            children: \"Choose your preferences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            show: show,\n            onHide: handleClose,\n            animation: false,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true,\n              children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                children: \"My Preferences\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: /*#__PURE__*/_jsxDEV(Form /*onSubmit={handleSearch}*/, {\n                children: [numberOfResults === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"No preferences found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Select your preferences: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 21\n                }, this), preferences.map(preference => /*#__PURE__*/_jsxDEV(Form.Check, {\n                  // Agrego un id unico\n                  type: \"switch\",\n                  id: `custom-switch-${preference.typeId}` // Hago uso del unique id\n                  ,\n                  label: preference.categoryName\n                  // le voy asignando el nombre para ir guardandolo en la base de datos\n                  ,\n                  name: preference.typeId,\n                  value: preferencesArray,\n                  onChange: handleCheck\n                }, `preference-${preference.typeId}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 21\n                }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Select your restrictions: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 21\n                }, this), restrictions.map(restriction => /*#__PURE__*/_jsxDEV(Form.Check, {\n                  // Agrego un id unico\n                  type: \"switch\",\n                  id: `custom-switch-${restriction.typeId}` // Hago uso del unique id\n                  ,\n                  label: restriction.categoryName\n                  // le voy asignando el nombre para ir guardandolo en la base de datos\n                  ,\n                  name: restriction.typeId,\n                  value: preferencesArray,\n                  onChange: handleCheck\n                }, `preference-${restriction.typeId}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: handleClose,\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: handleSave,\n                children: \"Save My Preferences\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            type: \"submit\",\n            children: \"Submit form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"37l4fiwAPLVHwDBeV6V7mlwlrSI=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useContext","useEffect","Layout","UserContext","registerUser","useNavigate","Form","InputGroup","Col","Row","getPreferencesList","Button","Modal","formik","yup","jsxDEV","_jsxDEV","initialValues","username","password","confirmPassword","fullName","email","zipCode","address","role","preferencesArray","validationSchema","object","shape","string","required","oneOf","ref","Register","_ref","_s","children","navigate","formFields","setFormFields","setCurrentUser","preferences","setPreferences","restrictions","setRestrictions","numberOfResults","setNumberOfRecords","checkedPreference","setCheckedPreference","checkedRestriction","setCheckedRestriction","show","setShow","handleClose","handleShow","Formik","savedPreferences","JSON","parse","localStorage","getItem","savedCheckedPreferences","filter","pref","parseInt","savedCheckedRestrictions","fetchData","data","length","rArray","pArray","i","typeId","push","error","console","log","handleSubmit","event","alert","userRegister","registeredInUser","user","isAuthenticated","setItem","stringify","token","handleCheck","name","value","checked","target","prevPref","prevRestr","handleSave","e","userPreferences","userRestrictions","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_ref2","handleChange","values","touched","errors","noValidate","className","Group","as","md","controlId","Label","Control","type","onChange","placeholder","isInvalid","Feedback","readOnly","disabled","variant","onClick","onHide","animation","Header","closeButton","Title","Body","map","preference","Check","id","label","categoryName","restriction","Footer","_c","$RefreshReg$"],"sources":["C:/Users/stude/workspace/team-6-mate/final/react/src/pages/Register/Register.js"],"sourcesContent":["import { useState,useContext, useEffect } from 'react';\r\nimport Layout from \"../../components/ui/Layout\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport { registerUser } from '../../api/UserApi';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { getPreferencesList } from '../../api/PreferenceApi';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport * as formik from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport './Register.css';\r\n\r\n// defino los valores iniciales\r\nconst initialValues = {\r\n  username: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n  fullName: '',\r\n  email: '',\r\n  zipCode: '',\r\n  address: '',\r\n  role: 'User',\r\n  preferencesArray: [],\r\n};\r\n\r\n// defino las validaciones de yup schema\r\nconst validationSchema = yup.object().shape({\r\n  username: yup.string().required('Username is required'),\r\n  password: yup.string().required('Password is required'),\r\n  confirmPassword: yup.string()\r\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\r\n    .required('Confirm Password is required'),\r\n  fullName: yup.string().required('Full Name is required'),\r\n  email: yup.string().email('Invalid email').required('Email is required'),\r\n  zipCode: yup.string().required('Zip Code is required'),\r\n  address: yup.string().required('Address is required'),\r\n});\r\n\r\nconst Register = ({ children }) => {\r\n    const navigate = useNavigate();    \r\n    const [formFields, setFormFields] = useState(initialValues);\r\n    const { username, password, confirmPassword, fullName, email, zipCode, address, role, preferencesArray } = formFields;\r\n    const { setCurrentUser } = useContext(UserContext);\r\n\r\n    const [preferences, setPreferences] = useState([]);\r\n    const [restrictions, setRestrictions] = useState([]);\r\n    const [numberOfResults, setNumberOfRecords] = useState(0);\r\n\r\n    const[checkedPreference, setCheckedPreference] = useState([]);\r\n    const[checkedRestriction, setCheckedRestriction] = useState([]);\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const { Formik } = formik;\r\n\r\n\r\n    useEffect(() => {\r\n      const savedPreferences = JSON.parse(localStorage.getItem('userPreferences')) || []; // Recupero las preferencias guardadas\r\n      \r\n      const savedCheckedPreferences = savedPreferences.filter(pref => parseInt(pref) > 3);\r\n      const savedCheckedRestrictions = savedPreferences.filter(pref => parseInt(pref) <= 3);\r\n\r\n      // Actualizo mis check con lo guardado\r\n      setCheckedPreference(savedCheckedPreferences);\r\n      setCheckedRestriction(savedCheckedRestrictions);\r\n\r\n      const fetchData = async () => {\r\n          try {\r\n              const data = await getPreferencesList(); // Assuming getPreferencesList is an async function that returns your data\r\n\r\n              \r\n              if (data.length > 0) {\r\n                  let rArray = [];\r\n                  let pArray = [];\r\n                  for(var i =0; i < data.length; i++) {\r\n                      if(data[i].typeId >= 0 && data[i].typeId < 4) {\r\n                          rArray.push(data[i]); \r\n                      } else if (data[i].typeId > 3) {\r\n                          pArray.push(data[i]);\r\n                      }\r\n                  }\r\n                  setRestrictions(rArray);\r\n                  setPreferences(pArray);\r\n                  setNumberOfRecords(data.length);\r\n              }\r\n          } catch (error) {\r\n              console.error(\"Error fetching preferences:\", error);\r\n          }\r\n      }; \r\n      fetchData();\r\n  }, []); // Corre el useEffect una sola vez cuanto se monta el componente\r\n\r\n  // estoy chequeando que queden todos mis datos seleccionados en el nuevo array\r\n  // de manera inmediata y sin retraso como lo hace el console.log\r\n  useEffect(() => {\r\n    console.log(\"Updated preferencesArray:\", formFields.preferencesArray);\r\n  }, [formFields.preferencesArray]);\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        // event.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            alert(\"password do not match\");\r\n            return;\r\n        } \r\n        if (checkedPreference.length === 0 && checkedRestriction.length === 0) {\r\n          alert(\"please select your preferences\");\r\n          return;\r\n        } try {\r\n            const userRegister = { ...formFields, role: \"User\" }; \r\n            const registeredInUser = await registerUser(userRegister);\r\n            \r\n            if (registeredInUser) {                  \r\n                registeredInUser.user.isAuthenticated = true;\r\n                localStorage.setItem('user', JSON.stringify(registeredInUser.user));\r\n                localStorage.setItem('token', registeredInUser.token);        \r\n                setCurrentUser(registeredInUser.user);\r\n                navigate(\"/Recomendation\");\r\n                }\r\n            \r\n        } catch(error) {\r\n            console.log('user created encounter an error', error);\r\n        } \r\n\r\n    }\r\n\r\n    //  Este handlecheck se utiliza solo para las preferencias y restricciones\r\n    const handleCheck = (event) => {\r\n      const { name, value, checked } = event.target;\r\n      setFormFields({...formFields,[name]:value});\r\n\r\n      if(checked) {\r\n        if (parseInt(name) > 3) {\r\n        setCheckedPreference([...checkedPreference, name]);\r\n        console.log(\"check preference: \" + name)\r\n        } else if(parseInt(name) >= 0 && parseInt(name) <= 3) {\r\n          setCheckedRestriction([...checkedRestriction, name]);\r\n          console.log(\"check restriction: \" + name)\r\n        } \r\n      } else {\r\n        if (parseInt(name) > 3) {\r\n        setCheckedPreference([preferences.filter(prevPref => prevPref !== name)]);\r\n        console.log(\"unchecked preference: \" + name);\r\n        }  else if (parseInt(name) >= 0 && parseInt(name) <= 3) {\r\n          setCheckedRestriction([restrictions.filter(prevRestr => prevRestr !== name)]);\r\n          console.log(\"unchecked restriction: \" + name)\r\n        }\r\n      }\r\n  }\r\n\r\n    // Es para guardar las preferencias y restricciones\r\n    const handleSave = (e) => {\r\n      let userPreferences = [];\r\n      let userRestrictions = [];\r\n      if(checkedPreference.length === 0 && checkedRestriction.length === 0) {\r\n        alert(\"Please choose at least one preference\");\r\n      } else {\r\n        if(checkedPreference.length !== 0) {\r\n          // // Uso los puntos suspensivos para agregar las preferencias seleccionadas individualmente\r\n          userPreferences.push(...checkedPreference);\r\n        } \r\n        if(checkedRestriction.length !== 0) {\r\n          userPreferences.push(...checkedRestriction);\r\n        }\r\n          // seteo las preferencias del user en localStorage\r\n          localStorage.setItem('userPreferences', JSON.stringify(userPreferences));\r\n          localStorage.setItem('userPreferences', JSON.stringify(userRestrictions));\r\n\r\n          // seteo las preferencias seleccionadas en el formFields state\r\n          setFormFields({ ...formFields, preferencesArray: userPreferences });\r\n\r\n          // Cierro el modal una vez guardado\r\n          handleClose();\r\n        }\r\n        console.log(\"Updated preferencesArray:\", formFields.preferencesArray);\r\n        \r\n      \r\n    }\r\n\r\n    \r\n    return (\r\n        <Layout>\r\n            <h3>Register</h3>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={handleSubmit}\r\n              >\r\n            {({ handleSubmit,handleChange, values, touched, errors  }) => (\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n\r\n              {/*  primeros 3 fields*/}\r\n\r\n              <Row className=\"mb-3\">\r\n                <Form.Group as={Col} md=\"4\" controlId=\"validationFormik01\">\r\n                <Form.Label>Username</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\" \r\n                    // como estoy usando formik, tuve que setear formfields individualmente\r\n                    // para no mezclar los handlechange\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                      setFormFields({ ...formFields, username: e.target.value });\r\n                    }}\r\n                    // onChange={handleChange}\r\n                    value={values.username} \r\n                    name=\"username\"\r\n                    placeholder=\"Username\" \r\n                    required\r\n                    isInvalid={!!errors.username}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.username}\r\n                  </Form.Control.Feedback>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\">\r\n                <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    aria-label=\"Default\"\r\n                    aria-describedby=\"inputGroup-sizing-default\"\r\n                    type=\"password\" \r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                      setFormFields({ ...formFields, password: e.target.value });\r\n                    }}\r\n                    // onChange={handleChange} \r\n                    value={values.password} \r\n                    name=\"password\" \r\n                    placeholder=\"Password\"\r\n                    isInvalid={!!errors.password}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.password}\r\n                </Form.Control.Feedback>\r\n                </Form.Group>\r\n                  \r\n\r\n                <Form.Group as={Col} md=\"4\" controlId=\"validationFormik03\">\r\n                <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    aria-label=\"Default\"\r\n                    aria-describedby=\"inputGroup-sizing-default\"\r\n                    type=\"password\" \r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                      setFormFields({ ...formFields, confirmPassword: e.target.value });\r\n                    }}\r\n                    // onChange={handleChange} \r\n                    value={values.confirmPassword} \r\n                    name=\"confirmPassword\" \r\n                    placeholder=\"confirmPassword\"\r\n                    isInvalid={!!errors.confirmPassword}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.confirmPassword}\r\n                </Form.Control.Feedback>\r\n                </Form.Group>\r\n                </Row>\r\n\r\n                \r\n                  {/*  segundos 3 fields*/}\r\n\r\n                <Row className=\"mb-3\">  \r\n                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik04\">\r\n                <Form.Label>Full name</Form.Label>\r\n                  <Form.Control\r\n                    aria-label=\"Default\"\r\n                    aria-describedby=\"inputGroup-sizing-default\"\r\n                    type=\"text\" \r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                      setFormFields({ ...formFields, fullName: e.target.value });\r\n                    }}\r\n                    // onChange={handleChange} \r\n                    value={values.fullName} \r\n                    name=\"fullName\" \r\n                    placeholder=\"Full name\" \r\n                    required\r\n                    isInvalid={!!errors.fullName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                  Please enter a valid full name.\r\n                </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik05\">\r\n                <Form.Label>Email</Form.Label>\r\n                  <Form.Control\r\n                    aria-label=\"Default\"\r\n                    aria-describedby=\"inputGroup-sizing-default\"\r\n                    type=\"text\" \r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                      setFormFields({ ...formFields, email: e.target.value });\r\n                    }}\r\n                    // onChange={handleChange} \r\n                    value={values.email} \r\n                    name=\"email\" \r\n                    placeholder=\"Email\" \r\n                    required\r\n                    isInvalid={!!errors.email}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please enter a valid email.\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                </Row>\r\n\r\n                <Row className=\"mb-3\">  \r\n                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik06\">\r\n                <Form.Label>Zip Code</Form.Label>\r\n                  <Form.Control\r\n                    aria-label=\"Default\"\r\n                    aria-describedby=\"inputGroup-sizing-default\"\r\n                    type=\"number\" \r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                      setFormFields({ ...formFields, zipCode: e.target.value });\r\n                    }}\r\n                    // onChange={handleChange} \r\n                    value={values.zipCode} \r\n                    name=\"zipCode\" \r\n                    placeholder=\"Zip Code\" \r\n                    required\r\n                    isInvalid={!!errors.zipCode}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please enter a valid zip code.\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik07\">\r\n                <Form.Label>Address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\" \r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                      setFormFields({ ...formFields, address: e.target.value });\r\n                    }}\r\n                    // onChange={handleChange} \r\n                    value={values.address}  \r\n                    name=\"address\" \r\n                    placeholder=\"Address\" \r\n                    required\r\n                    isInvalid={!!errors.address}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please enter a valid address.\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                </Row>\r\n                \r\n                  <Row className=\"mb-3\">  \r\n                    <Form.Group as={Col} md=\"2\">\r\n                        <Form.Label>Assign Role</Form.Label>\r\n                          <Form.Control\r\n                            name=\"role\"\r\n                            type=\"text\"\r\n                            placeholder=\"User\"\r\n                            aria-label=\"Disabled input example\"\r\n                            readOnly\r\n                            disabled \r\n                          />\r\n                    </Form.Group>\r\n                  </Row>\r\n\r\n                  <Button variant=\"warning\" onClick={handleShow}>\r\n        Choose your preferences\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose} animation={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>My Preferences</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n                <Form /*onSubmit={handleSearch}*/>\r\n                {(numberOfResults === 0) &&\r\n                    <div>No preferences found</div>\r\n                }\r\n                {/*CAMBIAR PREFERENCE POR TIPO DE COMIDA U OTRO*/}\r\n                    <p>Select your preferences: </p>\r\n                    {preferences.map(preference => (\r\n                    <Form.Check // prettier-ignore\r\n                        key={`preference-${preference.typeId}`} // Agrego un id unico\r\n                        type=\"switch\"\r\n                        id={`custom-switch-${preference.typeId}`} // Hago uso del unique id\r\n                        label={preference.categoryName}\r\n                        // le voy asignando el nombre para ir guardandolo en la base de datos\r\n                        name={preference.typeId}\r\n                        value={preferencesArray}\r\n                        onChange={handleCheck}\r\n                    />\r\n                    ))}\r\n                    <p>Select your restrictions: </p>\r\n                    {restrictions.map(restriction => (\r\n                    <Form.Check // prettier-ignore\r\n                    key={`preference-${restriction.typeId}`} // Agrego un id unico\r\n                        type=\"switch\"\r\n                        id={`custom-switch-${restriction.typeId}`} // Hago uso del unique id\r\n                        label={restriction.categoryName}\r\n                        // le voy asignando el nombre para ir guardandolo en la base de datos\r\n                        name={restriction.typeId}\r\n                        value={preferencesArray}\r\n                        onChange={handleCheck}\r\n                    />\r\n                    ))}\r\n                  \r\n                </Form></Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleSave}>\r\n            Save My Preferences\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n\r\n  <button className=\"btn btn-danger\" type=\"submit\">Submit form</button>\r\n</Form>\r\n\r\n            )}\r\n        </Formik>\r\n          {children}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}